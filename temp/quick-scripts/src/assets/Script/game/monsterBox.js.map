{"version":3,"sources":["assets\\Script\\game\\monsterBox.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import AStar from \"../base/AStart\";\nimport baseTs from \"../base/baseTs\";\nimport { gamePass, gameState, monsterInfo } from \"../common/faceTs\";\nimport NameTs from \"../common/NameTs\";\nimport pageTs from \"../common/pageTs\";\nimport pool from \"../common/pool\";\nimport { UrlConst } from \"../server/UrlConst\";\nimport XMSDK from \"../server/xmsdk_cocos/XMSDK\";\nimport TrackMgr from \"../TrackMgr/TrackMgr\";\nimport tool from \"../util/tool\";\nimport util from \"../util/util\";\n\n\nconst {ccclass, property} = cc._decorator;\n\n@ccclass\nexport default class monsertBox extends baseTs {\n\n\n    @property({displayName:\"怪兽\",type:cc.Prefab})\n    private monsertPre:cc.Prefab = null;\n\n\n    /**寻路算法 */\n    private AStar:AStar;\n\n    /**行走路线 */\n    private walkData:any = {id:null,data:null};\n    \n    // private pool:pool; //对象池\n    \n\n    private isCome:boolean = false;\n    \n    onLoad () {\n\n        this.AStar = new AStar();\n\n        // this.loadAny(\"prefab/monster/monster\",cc.Prefab,(res)=>{\n        //     this.pool = new pool(res);\n        // });\n\n\n        //监听销毁\n        cc.game.on(NameTs.Game_Monster_Killed,res=>{\n            if(res.node){\n                util.levelMonsterNum --;\n                if(res.coin>0){\n                    cc.game.emit(NameTs.Game_Effect_coin,{node:res.node,value:res.coin,noMusic:true});\n                    util.addTermCoin(res.coin);\n                }\n                // this.pool.onEnemyKilled(res.node);\n                res.node.destroy();\n                res.node.removeFromParent();\n                res.node = null;\n                // util.addCoin(res.coin);\n                if(util.levelMonsterNum<=0&&util.levelState == gameState.start){\n                    console.log(\"打完了,准备加载下一关\");\n                    \n                    util.levelState = gameState.end;\n                    util.sendTurretData();\n                    util.userData.resistAttackTimes = 1;\n\t\t\t\t\tutil.getnowmapdata();\n                    cc.game.emit(NameTs.Game_Task_Progress);\n                    TrackMgr.AppGamedate({\n                        is_challenge_suc: true,\n                        game_level_hcdg: \"第\" + util.userData.customs.big + \"关\",\n                        level_hcdg: \"第\" + util.userData.customs.small + \"波\",\n                        game_time: util.gameTime.toFixed(1) + \"s\",\n                        use_tool: String(util.gamePropNum),\n                    });\n\n                    if(util.saveCustomLevel()){\n                        cc.game.emit(NameTs.Game_End,gamePass.success);\n                    }else{\n                        // this.showPage(pageTs.pageName.GameStart);\n                        cc.game.emit(NameTs.Game_Start);\n                    }\n                }\n            }\n        },this);\n\n        //加载下一关\n        cc.game.on(NameTs.Game_Load_Monster,()=>{\n            this.loadNextMonster();\n        },this);\n\n        //重玩\n        cc.game.on(NameTs.Game_Again,()=>{\n            this.clearAllMonster();\n            util.userData.customs.small = (util.userData.customs.small-1<1)?1:(util.userData.customs.small-1);\n            console.log(util.userData.customs.small,'util.userData.customs.small')\n            cc.game.emit(NameTs.Game_View_CustomsUpdata);\n            this.loadNextMonster();\n        },this);\n\n    }\n\n    /**\n     * 初始化\n     */\n    init(){\n        // 获取地图数据\n        let mapData = util.GetCustomsMap();\n        //初始化某些数据\n        util.levelMonsterArr = [];\n        util.levelMonsterNum = 0;\n        util.MonsterMap.clear();\n\n        /**行走路线 */\n        this.AStar.init(mapData.map,mapData.xLen,mapData.yLen);\n        this.AStar.FindPoint(res=>{\n\n            if(!res){\n                console.error(\"道路不通\")\n                return;\n            }\n\n            this.walkData = {id:mapData.id,data:res};\n\n            this.loadMonster();\n\n        });\n\n\n        \n    }\n\n    start () {\n    }\n\n    /**\n     * 加载当前关卡怪兽数据\n    */\n    loadMonster(){\n        this.isCome = true;\n\n        //拷贝一份防止属性串改\n        let monsterData = tool.deepClone(util.GetCustomsMonsterInfo());\n\n        \n\n        let monsterArr:any[] = monsterData;\n        //将怪兽放进数组\n        // for(let i = 0;i<monsterData.length;i++){\n        //     let item = monsterData[i];\n        //     for(let j = 0;j<item.num;j++){\n        //         monsterArr.push({level:item.level,hp:item.hp});\n        //     }\n        // }\n        //数组打乱\n\n        // monsterArr = [100101,100102,100103,100104,100105,100106,100107,100108,100109,100110,100111,100112,100113,100114,100115,100116]\n        // monsterArr = [100102]\n\n\n\n        monsterArr = tool.randomArr(monsterArr);\n        //设置结束条件（怪兽的数量）\n        util.levelMonsterNum = monsterArr.length;\n        util.levelState = gameState.start;\n        let zIndex:number = monsterArr.length;\n        for(let i = 0;i<monsterArr.length;i++){\n            let monster:monsterInfo = util.GetMonsterIdData(monsterArr[i]);\n            zIndex--;\n            this.createMonster(monster,i,zIndex);\n        }\n\n        this.scheduleOnce(()=>{\n            this.isCome = false;\n        },0.2);\n    }\n\n    /**\n     * 创建怪兽\n     * @param data 怪兽数据\n     * @param id 第几个\n     * @param zIndex 层级\n     */\n    createMonster(data:monsterInfo,id:number,zIndex:number){\n        \n        // this.pool.createEnemy(this.node,{data,walk:this.walkData.data,id});\n        let item:cc.Node = cc.instantiate(this.monsertPre);\n        item.getComponent(item.name).init({data,walk:this.walkData.data,id});\n        item.setParent(this.node);\n        item.zIndex = zIndex;\n    }\n\n\n    /**\n     * 加载下一关怪兽\n     * @param id 地图id\n     */\n    loadNextMonster(){\n        if(this.isCome)return;\n        let mapData = util.GetCustomsMap();\n        if(this.walkData.id&&this.walkData.id==mapData.id){\n            this.loadMonster();\n            return;\n        }\n       \n        this.init();\n    }\n\n    /**\n     * 清除所有\n     */\n    clearAllMonster(){\n\n        cc.game.emit(NameTs.Game_Monster_clearAll);\n\n    }\n\n\n    \n\n    // update (dt) {}\n}\n"]}