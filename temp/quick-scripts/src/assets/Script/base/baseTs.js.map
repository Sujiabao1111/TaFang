{"version":3,"sources":["assets\\Script\\base\\baseTs.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import PageManage from \"../PageManage\";\n\nconst {ccclass, property} = cc._decorator;\n\n@ccclass\nexport default class baseTs extends cc.Component {\n\n\n    @property({displayName:\"是否开启动画\"})\n    isAni:boolean = true;\n\n    /**\n     * 加载预制体\n     * @param url 地址\n     * @param type 类型\n     * @param call 回调\n     */\n    loadAny(url:string,type:any,call:Function, fail?:Function){\n\t\tconsole.log(\"loadAny : \" +url )\n        cc.resources.load(url,type,(err,res)=>{\n            if(err){\n                cc.error(\"加载资源失败\",err);\n                if(fail){\n                    fail(); \n                }\n                return;\n            }\n            call&&call(res);\n        })\n\n    }\n\n    /**\n     * 加载图片\n     * @param url 地址\n     * @param type 1.炮塔  2.怪兽  3.炮塔底座\n     * @param call 回调\n     */\n    loadImage(level:number, type:number, call:Function, fail?:Function){\n        if(type == 1){\n            cc.resources.load(`texture/turret/body_${level}`, cc.SpriteFrame, (err,res)=>{\n                if(err){\n                    cc.error(\"加载资源失败\",err);\n                    fail && fail();\n                    return;\n                }\n                call&&call(res);\n            })\n        }\n        else if(type == 2){\n            cc.resources.load(`texture/monster/monster${level}`, cc.SpriteFrame, (err,res)=>{\n                if(err){\n                    cc.error(\"加载资源失败\",err);\n                    fail && fail();\n                    return;\n                }\n                call&&call(res);\n            })\n        }\n        else if(type == 3){\n            cc.resources.load(`texture/turret/foot_${level}`, cc.SpriteFrame, (err,res)=>{\n                if(err){\n                    cc.error(\"加载资源失败\",err);\n                    fail && fail();\n                    return;\n                }\n                call&&call(res);\n            })\n        }\n    }\n\n    /**\n     * 打开哪个\n     * @param name 哪个\n     */\n    showPage(name:string, data = null){\n        PageManage.singleton.showPage(name, data);\n    }\n\n    /**\n     * 关闭\n     */\n    closePage(){\n        if(this.node){\n            PageManage.singleton.closePage(this.node.name);\n        }        \n\n    }\n\n\n    // update (dt) {}\n}\n"]}