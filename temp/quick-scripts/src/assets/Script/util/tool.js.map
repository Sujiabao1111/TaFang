{"version":3,"sources":["assets\\Script\\util\\tool.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["/**\n * 工具类\n * 黎伟权\n * 2021.1.14\n */\nclass tool  {\n\n  /**\n   * 深度拷贝\n   * @param obj 任何一个\n   */\n  deepClone (obj:any) {\n        if (typeof obj !== 'object') {\n          return obj;\n        }\n        if (!obj) { // obj 是 null的情况\n          return obj;\n        }\n        if (obj instanceof Date) {\n          return new Date(obj);\n        }\n        if (obj instanceof RegExp) {\n          return new RegExp(obj);\n        }\n        if (obj instanceof Function) {\n          return obj;\n        }\n        let newObj;\n        if (obj instanceof Array) {\n          newObj = [];\n          for(let i = 0, len = obj.length; i < len; i++){\n              newObj.push(this.deepClone(obj[i]));//递归操作嵌套对象\n           }\n           return newObj;\n        }\n        newObj = {};\n        for(let key in obj) {\n          if (obj.hasOwnProperty(key)) {\n            if (typeof obj[key] !== 'object') {\n              newObj[key] = obj[key];\n            } else {\n              newObj[key] = this.deepClone(obj[key]);//递归操作嵌套对象\n            }\n          }\n        }\n        return newObj;\n    }\n      \n    /**\n     * 获取数组里面某个东西并返回东西，没有则null\n     * @param key Key名\n     * @param value 值\n     * @param arr 数组\n     * @param num 取多少个（相同的值得时候）不写默认1个，-1则全部\n     */\n    GetArrData(key:string,value:any,arr:any[],num:number = 1){\n        let newArr:any[] = [];\n        if(arr&&arr.length>0){\n          for(let i = 0;i<arr.length;i++){\n\n            if(arr[i][key]==value){\n              newArr.push(this.deepClone(arr[i]));\n              if(num>=newArr.length){\n                  break;\n              }\n            }\n          }\n        }\n        //console.log(\"GetArrData -----------: \"+ newArr.length)\n\t\t//console.log(\"GetArrData ----2-------: \"+ newArr)\n        if(newArr.length>0){\n          if(num==1){\n\t\t\t//console.log(\"GetArrData -----------: 返回 \"+ newArr[0])\n            return newArr[0];\n          }else{\n\t\t\t//console.log(\"GetArrData -----------: 返回2\")\n            return newArr;\n          }\n        }else{\n\t\t\t//console.log(\"GetArrData -----------: 返回空\")\n          return null;\n        }\n    }\n    /**\n     * 重设数组里面某个东西并返回是否成功\n     * @param key1 查找Key名\n     * @param value1 查找值\n     * @param key2 需要修改Key名\n     * @param value2 需要修改的值\n     * @param arr 数组\n     */\n    setArrData(key1:string,value1:any,key2:string,value2:any,arr:any[]):boolean{\n        //默认失败\n        let isSuccess:boolean = false;\n\n        for(let i = 0;i<arr.length;i++){\n\n            if(arr[i][key1]==value1){\n                arr[i][key2] = value2;\n                isSuccess = true;\n                break;\n            }\n        }\n\n        return isSuccess;\n    }\n\n    /**\n     * 获取随机数\n     * @param min 最小\n     * @param max 最大\n     * @param type 类型 0:丢弃小数部分,保留整数部分 1:向上取整,有小数就整数部分加1\n     * 2:向下取整,丢弃小数部分 3:四舍五入 4:不做任何转义\n     */\n    GetRandom(min:number,max:number,type:number=0){\n\n      let minNum:number = Number(min);\n      let maxNum:number = Number(max);\n      let num:number = Math.random() * (maxNum - minNum )+ minNum;\n      switch(type){\n          case 0 :\n            num = parseInt(num.toString());\n            break;\n          case 1:\n            num = Math.ceil(num);\n            break;\n          case 2:\n            num = Math.floor(num);\n            break;\n          case 3:\n            num = Math.round(num);\n            break;\n          case 4:\n            break;\n      }\n\n      return num;\n\n    }\n    \n    /**\n     * 求两点之间的角度\n     * @param p1 点1\n     * @param p2 点2\n     */\n    GetPosAngle(p1:cc.Vec2,p2:cc.Vec2){\n      //计算出朝向\n        let dx:number = p2.x - p1.x;\n        let dy:number = p2.y - p1.y;\n        let dir:cc.Vec2 = cc.v2(dx,dy);\n    \n        //根据朝向计算出夹角弧度\n        let angle:number = dir.signAngle(cc.v2(1,0));\n  \n        //将弧度转换为欧拉角\n        let degree:number = angle / Math.PI * 180+90;\n\n        return -degree\n\n    }\n    \n    /**\n     * 打乱数组\n     * @param arr 数组\n     */\n    randomArr(arr:any[]){\n        arr.sort(() => Math.random() - 0.5);\n        return arr;\n    }\n\n    /**\n     * 时间换算\n     * @param time \n     * @param num 1:秒 2：秒和分 3：全都有\n     */\n    changeTime(time:number,num:number=2){\n\n        let h:number = Math.floor(time/60/60);\n        let m:number = Math.floor(time/60);\n        let s:number = Math.floor(time%60);\n\n        let hStr = (h<10?\"0\":\"\")+h;\n        let mStr = (m<10?\"0\":\"\")+m;\n        let sStr = (s<10?\"0\":\"\")+s;\n\n        let str = null;\n\n        if(num==3){\n          str = hStr+\":\"+mStr+\":\"+sStr;\n        }else if(num==2){\n          str = mStr+\":\"+sStr;\n        }else{\n          str = sStr;\n        }\n        return str;\n\n    }\n\n    /** \n     * 距离特定的时间还差多少\n     * @param hours 小时 默认凌晨\n    */\n    formatData(hours:number = 24):string{        \n        let date: any = new Date();        \n        let temphh = hours - 1 - date.getHours();\n        let tempMinutes = 59 - date.getMinutes();\n        let tempSeconds = 59 - date.getSeconds();\n        if(temphh<0){\n          temphh+=24;\n        }\n        let hh = (temphh < 10 ? '0' + temphh : temphh) + ':';\n        let mm = (tempMinutes < 10 ? '0' + tempMinutes : tempMinutes) + ':';\n        let ss = (tempSeconds < 10 ? '0' + tempSeconds : tempSeconds);\n        return hh + mm + ss;\n    }\n\n    /**\n     * 单位转换\n     * @param num1 传入数字\n     * @param num2 保留多少位(默认2)\n     */\n    changeUnit(num1:number,num2:number=2):string{\n      //换算长度\n      let newNum:number = String(num1).length;\n      let isTreeMultiple:boolean = newNum%3==0;\n      let Len:number = Math.floor(newNum/3);\n      //单位\n      let unit:string[] = [\"\",\"K\",\"M\",\"B\",\"T\",\"Q\"];\n      if(Len>unit.length-1){\n         Len = unit.length-1;\n      }\n      Len -= isTreeMultiple?1:0;\n      let str:string = (num1/(Math.pow(1000,Len))).toFixed(num2);\n      for(let i = 0;i<2;){\n        let lastNum:string = str.substr(-1);\n        if(lastNum == \"0\"){\n            str = str.substr(0,str.lastIndexOf(\"0\"));\n             i++; \n        }else{\n            break;\n        }\n      }\n      if(str.substr(-1)==\".\"){\n        str = str.substr(0,str.lastIndexOf(\".\"));\n      }\n      return str+unit[Len];\n\n    }\n   \n    \n}\n\nexport default new tool();"]}