{"version":3,"sources":["assets\\Script\\util\\util.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["\nimport { gameNumerical, gameState, PoolInfo, propInfo, propState, propType, soundInfo, thingType, turretInfo, updateType } from \"../common/faceTs\";\nimport NameTs from \"../common/NameTs\";\nimport userData from \"../data/userData\";\nimport jsonSingleton from \"../base/jsonSingleton\";\nimport tool from \"./tool\";\nimport { TextCtr } from \"../Assist/TextCtr\";\nimport XMSDK from \"../server/xmsdk_cocos/XMSDK\";\nimport { UrlConst } from \"../server/UrlConst\";\nimport { GameEffect } from \"../effect/GameEffect\";\nimport AdController from \"../server/xmsdk_cocos/AD/AdController\";\nimport { AdPosition } from \"../common/AdPosition\";\nimport TrackMgr from \"../TrackMgr/TrackMgr\";\nimport { AssistCtr } from \"../Assist/AssistCtr\";\n// import encrypt = require('encryptjs');\nclass util {\n\n    /**需要加载的json列表 */\n    jsonArr: string[] = [\n        NameTs.turretData,\n        NameTs.mapData,\n        NameTs.monsterData,\n        NameTs.buyData,\n        NameTs.propData,\n        NameTs.coinData,\n        NameTs.treasureData,\n        NameTs.monsterIdData,\n\t\tNameTs.gkData,\n        NameTs.bulletData\n    ];\n\n    /**本地字典 */\n    localDiary: any = {\n        haveTreasure: \"haveTreasure\",//宝藏数据\n        noviceGuide: \"noviceGuide\", //新手指导顺序\n        GetTurretNum: \"GetTurretNum\",//获得炮塔\n        GetDayTime: \"GetDayTime\",//今天日期\n        autoProp: \"autoProp\",//自动道具\n        unlocking_time: \"unlocking_time\",//解锁时间\n        synthesis_times: \"synthesis_times\",//合成次数\n        propConfig: \"propConfig\",//道具详细表\n        offlineTime: \"offlineTime\",//离线时间\n        onlineTime: \"onlineTime\", //在线时间\n        randomRedTimeNum:\"randomRedTimeNum\",//随机红包时间\n        earnProgress:\"earnProgress\",//展现手指次数\n    }\n\n    secretkey: string = 'open_sesame'; // 加密密钥\n\n    GlobalMap: Map<string, any> = new Map(); //用户储存某些东西\n\n    MonsterMap: Map<string, any> = new Map(); //储存怪兽东西\n\n    iphoneXTop: number;//刘海屏高度\n\n    touchId: number; //touchid\n\n    savingPotLock:boolean = false;//是否解锁了金币飞入存钱罐\n\n    heavenTouch: boolean;//用于防重复点击\n\n    Opening_times_level: number = 0;//开启次数\n\n    isCheckTaskRed: boolean = true; //是否检测首页任务红点\n\n    adPreObj: any = {}; //预加载广告的\n\n    /**用户数据 */\n    userData: userData = {\n        pool: [],\n        coin: 0,\n        hongbao: 0,\n        customs: {\n            big: 1,\n            small: 1\n        },\n        product: 40,\n        turretLevel: 1,\n        prop: [\n            /**冰冻 */\n            { type: 1, num: 0, time: null, use: propState.end },\n            /**电击*/\n            { type: 2, num: 0, time: null, use: propState.end },\n            /**护罩*/\n            { type: 3, num: 0, time: null, use: propState.end },\n            /**清屏*/\n            { type: 4, num: 0, time: null, use: propState.end },\n            /**自动合成*/\n            { type: 5, num: 0, time: null, use: propState.end },\n            /**增能*/\n            { type: 6, num: 0, time: null, use: propState.end }\n        ],\n        exchangeRate: 10000,\n        newUser: true,\n        compoundTimes: 0,\n        noviceGuide: 1,\n        buyCount: 0,\n        emptyBoxNo: -1,\n        heavenPool: [],\n        haveTreasure: [],\n        termCoin: 0,\n        offlineIncome: {\n            reward:0,\n            multipleReward:0\n        },\n        version: 0,\n        GetTurretNum: 18,\n        GetDayTime: null,\n        autoProp: null,\n        airborneCount: 0,\n        unlocking_time: 0,\n        synthesis_times: 0,\n        synthesis_All: 0,\n        propConfig: null,\n        resistAttackTimes: 0,\n        localCompoundTime: 0,\n        dayEnterSignNum: null,\n        goldWheelCount: null,\n        savingPotNum:0,\n    };\n\n    /**AB测试 */\n    AB_Test: any = {\n        lock_turret_test: \"B\",\n        heaven_coin_test: \"B\",\n        new_hand_test:\"B\",\n        // wallet_test:\"A\",\n    }\n\n    //观看视频次数\n    advertising_num: number = 0;\n    //看视频获取道具总次数\n    props_number: number = 0;\n\n    //游戏时间\n    gameTime: number = 0;\n    //道具使用次数\n    gamePropNum: number = 0;\n\n    //点击了暂停\n    isStop: boolean = false;\n\n    //用户行为\n    behaviorRewardVoList: any = null;\n\n    //过关奖励\n    gameLevelPassRewardVoList: any = [];\n\n    //下一关的奖励\n    gameLevelPassRewardNextVoList: any = [];\n\n    //关卡怪物配置\n    mapConfig: any = null;\n\n    //道具配置表\n    propData: any = null;\n\n    //道具具体数值\n    propConfig: any = null;\n\n    //在线时间长度\n    online_time = 600;\n\n    /**天降金币点击次数*/\n    heavenClickNum: number = 1;\n\n    /**是否到时间发送数据3秒 */\n    isSendTurretData: boolean = false;\n    \n    /**是否到时间发送数据3秒 */\n    isSendCoinData: boolean = false;\n\n    /**双倍收益 */\n    doubleEarn: any = { use: propState.end, time: null };\n\n    /**上一次上传的数据 */\n    lastData: any = {\n        compoundTimes: null, //合成次数\n        highestBatteryLevel: null, //最高炮塔\n        point: null, //金币\n        userBatteryNum: null, //多少个炮塔\n        userMapDetail: [] //池塘数据\n    };\n\n    //音效配置\n    soundSet: soundInfo = {\n        bgm: 1, //背景音效\n        sound: 1 //普通音效\n    };\n\n    mapSize: any = {\n        width: 750, //地图宽度\n        grid: null, //地图格子大小\n        startGridPos: null //初始位置\n    };//地图大小\n\n    //存储当前关卡的炮塔位置和回收的位置\n    levelMap: any = [];\n    //存储当前关卡的怪兽\n    levelMonsterArr: { id: number, num: number }[] = [];\n    //当前怪兽数量\n    levelMonsterNum: number;\n    //当前游戏状态\n    levelState: number = gameState.default;\n    //购买次数\n    buyCount: number = 0;\n    //今天是否签到\n    isOkSign: boolean = false;\n    //是否有在线奖励红包\n    isSignOnLineRed:boolean = false;\n    //距离上次获得随机红包时间\n    upTurretRandomRedTime = 0;\n    //当前在线时间\n    onlineTimeNum = 0;\n    //随机红包时间\n    randomRedTimeNum = 60;\n    //天降金币的视频数量\n    existVideoCoinNum: number = 0;\n\n    //临时变量\n    tempParm: object = {};\n    /**\n     * 检查池塘哪个位置是空的\n     */\n    checkPool(): number {\n\n        let loaction: number = null;//位置\n\n        for (let i = 0; i < this.levelMap.length; i++) {\n            let item = this.levelMap[i];\n            let data = this.GetPoolData(item.no);\n            let heavenItem = tool.GetArrData(\"no\", item.no, this.userData.heavenPool);\n\n            if (data && data.level == -1 && data.state == 1 && heavenItem.id == null) {\n                if (item.no != this.userData.emptyBoxNo) {\n                    loaction = item.no;\n                    break;\n                }\n            }\n        }\n        return loaction;\n    }\n\n\tsetInt(_key,_value){\n            cc.sys.localStorage.setItem(_key,_value.toString())\n        }\n\t\n\t getInt(_key,def){\n\t\t\t\n\t\t\tvar ds = cc.sys.localStorage.getItem(_key)\n\t\t\tif( ds == \"\" || ds == null)\n\t\t\t{\n\t\t\t\tthis.setInt(_key,def);\n\t\t\t\tds = def;\n\t\t\t}\n            return Number(ds)\n        }\n\n\tgetString(_key)\n\t{\n\t\treturn cc.sys.localStorage.getItem(_key)\n\t}\n\t\n\t\n\tsetString(_key,_value)\n\t{\n\t\tcc.sys.localStorage.setItem(_key,_value.toString())\n\t}\n\n\tinidata(){\n\t\t//金币\n\t\tthis.userData.version = 548;\n\t\tthis.doubleEarn.use = 0;\n        this.doubleEarn.time = 0;\n\t\tthis.userData.coin = this.getInt(\"goldhb\",0)\n\t\tthis.userData.exchangeRate = this.getInt(\"exchangeRate\",10000)\n\t\tthis.userData.product = this.getInt(\"product\",40)\n\t\tthis.userData.customs.big = this.getInt(\"customsbig\",1)\n\t\tthis.userData.customs.small = this.getInt(\"customssmall\",1)\n\t\tthis.userData.newUser =true //this.getInt(\"newuser\",1)==1?true:false;\n\t\tthis.userData.turretLevel=this.getInt(\"turretLevel\",1)\n\t\t\n\t\tlet psdd = this.getString(\"mappool\")\n\t\tif( psdd == \"\" || psdd ==null )\n\t\t{\n\t\t\tthis.initPool();\n\t\t\tlet dds =  JSON.stringify( this.userData.pool)\n\t\t\tthis.setString( \"mappool\" ,dds)\n\t\t}else\n\t\t{\n\t\t\tthis.userData.pool =  JSON.parse(psdd)\n\t\t\t this.repairPool();\n\t\t}\n\t\t\n\t}\n\t\n\tsavedata()\n\t{\n\t\t\n\t\tthis.setInt(\"goldhb\",this.userData.coin)\n\t\tthis.setInt(\"exchangeRate\",this.userData.exchangeRate)\n\t\tthis.setInt(\"product\",this.userData.product)\n\t\t this.setInt(\"customsbig\",this.userData.customs.big)\n\t\t this.setInt(\"customssmall\",this.userData.customs.small)\n\t\tthis.userData.newUser =true //this.getInt(\"newuser\",1)==1?true:false;\n\t\tthis.setInt(\"turretLevel\",this.userData.turretLevel)\n\t\t\n\t\tlet dds =  JSON.stringify( this.userData.pool)\n\t\tthis.setString( \"mappool\" ,dds)\n\t}\n\t\n\t\n\t//判断是不是签到今天\n\tcanSinge()\n\t{\n\t\tvar canget = true;\n\t\tvar d = new Date();\n\t\tvar dats  = [\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\"];\n\t\tvar dd = this.getString(\"singdada\");\t\t\n\t\t\n\t\tif( dd == \"\" || dd== null || dd == undefined )\n\t\t{\n\t\t\t this.setString(\"singdada\",JSON.stringify(dats));\t\t\n\t\t\t//,JSON.stringify(表名)\n\t\t}else\n\t\t{\n\t\t\tdats =  JSON.parse(dd );\n\t\t}\n\t\t\n\t\tvar resrte = 0;\n\t\tfor(var i=0;i<7;i++)\n\t\t{\n\t\t\tif( dats[i] == \"0\" )\n\t\t\t{\n\t\t\t\tresrte = 1;\n\t\t\t}\n\t\t}\n\t\t\n\t\tif( resrte == 0 )\n\t\t{\n\t\t\tdats  = [\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\"];\n\t\t\tthis.setString(\"singdada\",JSON.stringify(dats));\t\t\n\t\t}\n\t\t\n\t\t\n\t\tvar tdstr = d.getFullYear() +\"\"+ d.getMonth()+\"\"+d.getDate();\n\t\t//console.log(\"sing :  \" +tdstr );\n\t\tfor( var i = 0;i<7;i++ )\n\t\t{\n\t\t\tif( tdstr == dats[i] )\n\t\t\t{\n\t\t\t\tcanget = false;\n\t\t\t}\n\t\t}\n\t\t\n\t\t\n\t\treturn !canget;\n\t}\n\t\n\t\n\tsinglen()\n\t{\n\t\tvar dd = this.getString(\"singdada\");\t\n\t\tvar dats =  JSON.parse(dd );\n\t\t\n\t\tvar index = 0;\n\t\tfor( var i = 0;i<7;i++ )\n\t\t{\n\t\t\tif( dats[i] != \"0\" )\n\t\t\t{\n\t\t\t\tindex+=1\n\t\t\t}\n\t\t}\n\t\t \n\t\treturn \tindex;\t \n\t}\n\t\n\tsingtoday()\n\t{\n\t\tvar dd = this.getString(\"singdada\");\t\n\t\tvar dats =  JSON.parse(dd );\n\t\tvar d = new Date();\n\t\tvar tdstr = d.getFullYear() +\"\"+ d.getMonth()+\"\"+d.getDate();\n\t\tvar index = 0;\n\t\tfor( var i = 0;i<7;i++ )\n\t\t{\n\t\t\tif( dats[i] == \"0\" )\n\t\t\t{\n\t\t\t\tdats[i] = tdstr;\n\t\t\t\tindex = i;\n\t\t\t\t\n\t\t\t\ti= 8;\n\t\t\t}\n\t\t}\n\t\t this.setString(\"singdada\",JSON.stringify(dats));\n\t\treturn \tindex;\t \n\t}\n\n\n    /**\n     * 用于新手，初始化用户数据\n     */\n    initPool() {\n\n\n        for (let i = 1; i < 17; i++) {\n\n            //初始化池塘\n            this.userData.pool.push({\n                no: i, //第几个位置\n                level: i == 1 ? 1 : -1,//-1为空\n                state: 1 //默认前8个解锁\n            });\n        }\n\n    }\n\n    /**修复旧数据*/\n    repairPool() {\n\n        for (let i = 0; i < this.userData.pool.length; i++) {\n\n            if (this.userData.pool[i].state == 0) {\n\n                this.userData.pool[i].state = 1;\n\n            }\n\n        }\n\n    }\n\n    /**\n     * 初始化金币位置\n     */\n    initHeavenPool() {\n        for (let i = 1; i < 17; i++) {\n            //初始化金币池塘\n            this.userData.heavenPool.push({\n                no: i, //位置\n                id: null, //金币id\n                value: null, //多少值\n            });\n        }\n    }\n\n    /**\n     * 获取炮台的数据\n     * @param level 等级\n     */\n    GetTurretData(level: number): turretInfo {\n\n        let data: turretInfo = null;\n\n        let turretData = jsonSingleton.singleton.getJson(NameTs.turretData);\n\n        data = tool.deepClone(tool.GetArrData(\"level\", level, turretData));\n\n        return data;\n    }\n\n    /**\n     * 保存一下池塘数据\n     * @param id 位置\n     * @param level 等级 null就是删除\n     */\n    savePool(id: number, level: number = null) {\n        // let isExist:number = null;\n        for (let i = 0; i < this.userData.pool.length; i++) {\n            let item = this.userData.pool[i];\n            if (this.userData.pool[i].no == id) {\n                if (level) {\n                    item.level = level;\n                } else {\n                    item.level = -1;\n                }\n                break;\n            }\n        }\n    }\n\n    /**\n     * 获取行为奖励\n     * @param type 1-第一次解锁新炮塔，2-消灭怪兽，3-解锁炮塔 4-完成关卡 5.合成\n     */\n    GetBehaviorRewardVo(type: number) {\n\t\t//console.log(\"-------123-------behaviorRewardVoList : \" + JSON.stringify(this.behaviorRewardVoList) )\n        return tool.GetArrData(\"type\", type, this.behaviorRewardVoList).reward;\n\n    }\n\t\n\t\n\tgetnowmapdata()\n\t{\n\t\t\n       this.mapConfig = this.getMapdata(this.userData.customs.big);\n\t\t\n\t}\n\t\n\n    /**\n     * 保存一下金币池塘数据\n     * @param no 位置\n     * @param id 金币id null就是删除\n     * @param value 多少值 null就是删除\n     */\n    saveHeavenPool(no: number, id: number = null, value: number = null) {\n        // let isExist:number = null;\n        for (let i = 0; i < this.userData.heavenPool.length; i++) {\n            let item = this.userData.heavenPool[i];\n            if (this.userData.heavenPool[i].no == no) {\n                if (value || id) {\n                    item.id = id;\n                    item.value = value;\n                } else {\n                    item.id = null;\n                    item.value = null;\n                }\n                break;\n            }\n        }\n    }\n\n    /**\n     * 获取金币池塘的有多少个\n     */\n    getHeavenPool() {\n\n        let num: number = 0;\n\n        for (let i = 0; i < this.userData.heavenPool.length; i++) {\n            // let item = this.userData.heavenPool[i];\n            if (this.userData.heavenPool[i].id) {\n                num++;\n            }\n        }\n\n        return num;\n    }\n\n    /**\n     * 检查天降金币这个位置是否为有东西\n     * @param no 位置\n     */\n    checkHeavenPool(no: number): boolean {\n        let isExist: boolean = false;\n        for (let i = 0; i < this.userData.heavenPool.length; i++) {\n            let item = this.userData.heavenPool[i];\n            if (this.userData.heavenPool[i].no == no) {\n                if (item.id) {\n                    isExist = true;\n                }\n                break;\n            }\n        }\n\n        return isExist;\n    }\n\n    /**\n     * 升级\n     * 返回是否是新等级\n     * @param level 等级\n     */\n\n    upLevel(level: number): boolean {\n        if (level > this.userData.turretLevel) {\n            this.userData.turretLevel = level;\n            return true;\n        }\n\n        return false;\n    }\n\n    /**\n     * 获取当前关卡怪兽配置\n     */\n    GetCustomsMonsterInfo() {\n\n        let mapData = this.getMapdata(this.userData.customs.big);\n\t\t//console.log(\"GetCustomsMonsterInfo : \"+ JSON.stringify(mapData))\n        // let mapData = jsonSingleton.singleton.getJson(NameTs.mapData);\n\n        //返回数据\n        let data = mapData[this.userData.customs.small - 1];\n\n        // for(let i = 0;i<mapData.length;i++){\n\n        //     if(mapData[i].id==this.userData.customs.big){\n\n        //         for(let j = 0;j<mapData[i].customs.length;j++){\n\n        //             if(mapData[i].customs[j].level==this.userData.customs.small){\n        //                 data = mapData[i].customs[j].monster;\n        //                 break;\n        //             }\n\n        //         }\n\n        //     }\n        // }\n        let Arr = [];\n        data = data.levelConfig.split(\"+\");\n\n        for (let i = 0; i < data.length; i++) {\n\n            let item = data[i].split(\"-\");\n\n            let id = item[0];\n            let num = item[1];\n\n            for (let j = 0; j < num; j++) {\n                Arr.push(id);\n            }\n\n        }\n\n        return Arr;\n\n    }\n\n    /**\n     * 获取当前关卡地图配置\n     */\n    GetCustomsMap() {\n\n        let mapData = jsonSingleton.singleton.getJson(NameTs.mapData);\n\n        //返回数据\n\n        let data = tool.GetArrData(\"id\", 1, mapData);\n\t\t//console.log(\"--------GetCustomsMap----------:map : \"+ mapData )\n        return data;\n\n\n    }\n\n    /**\n     * 通过位置来获取用户数据\n     * @param loaction 哪个\n     */\n\n    GetPoolData(loaction: number) {\n\n        let data = null;\n        data = tool.GetArrData(\"no\", loaction, this.userData.pool);\n        return data;\n    }\n    /**\n     * 通过位置来获取Map数据\n     * @param loaction 哪个\n     */\n    GetPlaceData(loaction: number) {\n        let data = null;\n\n        data = tool.GetArrData(\"no\", loaction, this.levelMap);\n\n        return data;\n    }\n\n    /**\n     * 获取怪兽数据\n     * @param no 等级\n     */\n\n    GetMonsterData(level: number) {\n        let data = jsonSingleton.singleton.getJson(NameTs.monsterData);\n\n        return tool.GetArrData(\"no\", level, data);\n\n    }\n\n    /**检查最高级别的炮塔时是否超过两个 */\n    chekPoolHaveTwo() {\n\n        let level: number = this.userData.turretLevel;\n        let num: number = 0;\n\n        for (let i = 0; i < this.userData.pool.length; i++) {\n            let item = this.userData.pool[i];\n            if (item.level == level) {\n                num++;\n            }\n        }\n        return num >= 2;\n\n    }\n\n    /**\n     * 获取怪兽颜色\n     * @param level 等级\n     */\n\n    GetMonsterColor(level: number) {\n        let data = jsonSingleton.singleton.getJson(NameTs.monsterData);\n        return tool.GetArrData(\"no\", level, data).color;\n\n    }\n\n    /**\n     * 获取关卡怪兽id\n     * @param id id\n     */\n\n    GetMonsterIdData(id: number) {\n        let data = jsonSingleton.singleton.getJson(NameTs.monsterIdData);\n        return tool.GetArrData(\"id\", id, data);\n\n    }\n\n    /**\n     * 获取地图的位置\n     * @param x 横向\n     * @param y 竖向\n     */\n    GetMapPos(x: number, y: number): cc.Vec2 {\n\n        let pos: cc.Vec2 = cc.v2();\n\n        pos.x = this.mapSize.startGridPos.x + x * this.mapSize.grid;\n        pos.y = this.mapSize.startGridPos.y - y * this.mapSize.grid;\n        return pos;\n\n    }\n\n    /**\n     * 设置当前关卡 距离终点最近的怪兽\n     * @param id 怪兽id\n     * @param num 剩余多少步\n     */\n    setLevelMonsterData(id: number, num: number) {\n\n        let isExist: boolean = tool.setArrData(\"id\", id, \"num\", num, this.levelMonsterArr);\n        if (!isExist) {\n            this.levelMonsterArr.push({ id, num });\n        }\n\n        let sortFn = (a, b) => {\n\n            let before: number = a.num - b.num;\n\n            if (a.num == b.num) {\n                before = a.id - b.id;\n            }\n\n            return before;\n        }\n\n        this.levelMonsterArr.sort(sortFn);\n\n    }\n    /**\n     * 删除当前关卡 的怪物\n     * @param id 第几个\n     */\n    delectLevelMonster(id: number) {\n\n        let isSuccess: boolean = false;\n\n        for (let i = 0; i < this.levelMonsterArr.length; i++) {\n\n            if (this.levelMonsterArr[i].id == id) {\n                this.levelMonsterArr.splice(i, 1);\n                isSuccess = true;\n                break;\n            }\n\n        }\n\n    }\n\n    /**\n     * 获取最近终点的怪兽\n     */\n    getFirstMonster() {\n        //默认第一个\n        return this.levelMonsterArr[0];\n    }\n\n    /**\n     * 获取最靠近自己的怪兽\n     * @param pos 自己位置\n     * @param distanceNum 优先射程距离\n     */\n    getCloseMonster(pos: cc.Vec2, distanceNum: number = 250) {\n        //最靠近自己的\n        let closeMonsetr = { id: null, distance: null, num: null, isClose: false };\n\n        for (let i = 0; i < this.levelMonsterArr.length; i++) {\n            let name: string = this.userData.customs.big + \"-\" + this.userData.customs.small + \"_Monster_\" + this.levelMonsterArr[i].id;\n            let target: cc.Node = this.MonsterMap.get(name);\n            if (!target) continue;\n            let targetPos: cc.Vec2 = target.getPosition();\n            let distance: number = targetPos.sub(pos).mag();\n            if ((closeMonsetr.id == null || distance < closeMonsetr.distance) && distance <= distanceNum) {\n                closeMonsetr.id = this.levelMonsterArr[i].id;\n                closeMonsetr.distance = distance;\n                closeMonsetr.num = this.levelMonsterArr[i].num;\n                continue;\n            }\n        }\n        if (closeMonsetr.id !== null) {\n            delete closeMonsetr.distance;\n            closeMonsetr.isClose = true;\n            return closeMonsetr;\n        } else {\n            let str: any = this.getFirstMonster();\n            if (!str) return;\n            str.isClose = false;\n            return str;\n        }\n        // console.log(closeMonsetr,'closeMonsetr')\n    }\n\n    /**\n     * 验证是否还在靠近怪兽\n     * @param data {pos:自己的位置,id:}\n     */\n    checkMonsterClose(data: { pos: cc.Vec2, id: number, distanceNum: number }) {\n\n        let name: string = this.userData.customs.big + \"-\" + this.userData.customs.small + \"_Monster_\" + data.id;\n        let target: cc.Node = this.MonsterMap.get(name);\n        if (!target) return false;\n        let targetPos: cc.Vec2 = target.getPosition();\n        let distance: number = targetPos.sub(data.pos).mag();\n        return distance < data.distanceNum;\n    }\n\n    /**\n     * 获取相同的等级的炮台\n     * @param level 等级\n     */\n    getPoolSameLevelTurret(level: number) {\n\n        let sameLevel = tool.GetArrData(\"level\", level, this.userData.pool, -1);\n        return sameLevel;\n\n    }\n\n    /**\n     * 保存通关信息，并且+1\n     */\n\n    saveCustomLevel(): boolean {\n\n\n        // let mapData = this.mapConfig;\n\n        // if(this.mapConfig.length<this.userData.customs.small+1){\n        //     console.log(\"超过了\")\n        //     return;\n        // }\n\n        let IsUp: boolean = false; //是否升级\n\n        if (this.mapConfig.length < this.userData.customs.small + 1) {\n            this.getdataStr({\n                url: UrlConst.gameLevelCompleted,\n                data: { level: this.userData.customs.big },\n                success: (res) => {\n                    // this.gameLevelPassRewardVoList = [];\n                    // for (let i = 0; i < res.rewardList.length; i++) {\n                    //     this.gameLevelPassRewardVoList.push(res.rewardList[i]);\n                    // }\n                    console.log(\"完成关卡上报!\")\n                }\n            });\n            this.userData.customs.big += 1;\n            this.userData.customs.small = 1;\n\t\t\tthis.setInt(\"customsbig\",this.userData.customs.big)\n\t\t\tthis.setInt(\"customssmall\",this.userData.customs.small)\n            console.log(\"超过了小关卡的的长度,小关卡变为1，大关卡+1\");\n            IsUp = true;\n        } else {\n            this.userData.customs.small += 1;\n\t\t\tthis.setInt(\"customssmall\",this.userData.customs.small)\n        }\n\n        return IsUp;\n    }\n\n\n    /**\n     * 产能\n     * @param num 加多少个(默认1)\n     * @param type 普通的0（只能增加20如果超过则不增加）\n     */\n    productTurret(num: number = 1, type: number = 0) {\n\n        this.userData.product += num;\n        if (type == 0) {\n            this.addProduct(0);\n        }\n\n    }\n\n    /**\n     * 检查是否能升级 \n     * @param level 等级\n    */\n    checkUpdateLevel(level: number) {\n        let data = jsonSingleton.singleton.getJson(NameTs.turretData);\n        if (data.length < level) {\n\n            return false;\n        }\n\n        return true;\n    }\n\n    /**\n     * 增加多少个产能或者减少\n     * @param num 数量\n     */\n    addProduct(num: number) {\n        this.userData.product += num;\n        // if(this.userData.product+1>gameNumerical.ProductMax){\n        //     this.userData.product = gameNumerical.ProductMax;\n        // }else \n        if (this.userData.product < 0) {\n            this.userData.product = 0;\n        }\n        cc.game.emit(NameTs.Game_View_UserDataUpdata, updateType.product);\n    }\n    /**\n     * 增加多少个金币或者减少\n     * @param num 数量\n     */\n    addCoin(num) {\n        this.userData.coin += parseInt(num);\n        if (this.userData.coin < 0) {\n            this.userData.coin = 0;\n        }\n\t\tthis.savedata();\n        cc.game.emit(NameTs.Game_Wallet_AddCoin,num);\n        cc.game.emit(NameTs.Game_View_UserDataUpdata, updateType.coin);\n    }\n\n    /**期间加多少金币\n     * @param num 数值\n    */\n    addTermCoin(num: number) {\n        this.userData.termCoin += num;\n    }\n\n\n    /**\n     * 获取购买的等级并返回等级\n     */\n    getBuyRandomLevel(): number {\n\n        let data = jsonSingleton.singleton.getJson(NameTs.buyData);\n\n        //单独的等级\n        let level: number = null;\n\n        let smallData = { num: 0, level: 0 };\n\n        let str = tool.GetArrData(\"level\", this.userData.turretLevel, data);\n        let randomLevel: number = null;\n        if (!str) {\n            console.log(\"找不到~\" + this.userData.turretLevel + \"级的炮塔购买信息\")\n            str = data[data.length - 1];\n        } else {\n            let arr = JSON.parse(str.arr);\n            randomLevel = this.GetWeigthLevel(arr);\n        }\n\n        for (let i = 0; i < this.userData.pool.length; i++) {\n            let item = this.userData.pool[i];\n            if (item.level == -1) continue;\n            if (smallData.level == 0 || smallData.level > item.level) {\n                smallData.level = item.level;\n                smallData.num = 1;\n                continue;\n            } else if (smallData.level == item.level) {\n                smallData.num += 1;\n            }\n        }\n        if (smallData.num == 1 && randomLevel >= smallData.level) {\n            level = smallData.level;\n            console.log(\"有单独的炮塔\", level);\n        } else {\n            // console.log()\n            // level = Number(str.min);\n            // let maxLevel:number = Number(str.max);\n            // if(level+this.buyCount>maxLevel){\n            //     this.buyCount = 0;\n            // }else{\n            //     level += this.buyCount;\n            // }\n            // this.buyCount++;\n            level = randomLevel;\n        }\n        return level;\n\n    }\n\n    /**\n    * 通过权重获取等级\n    */\n    GetWeigthLevel(data: any[]) {\n\n        let arr = tool.deepClone(data);\n\n        let str = [];\n\n        for (let i = 0; i < arr.length; i++) {\n\n            let item = arr[i];\n\n            for (let j = 0; j < item.weigth; j++) {\n\n                str.push(item.id);\n\n            }\n\n        }\n        let random: number = tool.GetRandom(0, str.length - 1);\n        let id: number = str[random];\n        if (id == null) {\n            id = arr[0].id;\n        }\n\n        return Number(id);\n\n    }\n\n    /**\n     * 检测在哪里\n     * @param pos 点 基于中心点cc.v2\n     * @param call 回调 \n     */\n    checkTouchPool(pos: cc.Vec2, call: Function) {\n\n        let data: number = null;\n\n        for (let i = 0; i < this.levelMap.length; i++) {\n            let item = this.levelMap[i];\n            //格子的位置\n\n            let str = {\n                x: null,\n                y: null,\n                width: null,\n                height: null,\n            }\n\n            if (item.type == thingType.turret) {\n                str.x = this.mapSize.startGridPos.x + item.x * this.mapSize.grid;\n                str.y = this.mapSize.startGridPos.y - item.y * this.mapSize.grid;\n                str.width = this.mapSize.grid;\n                str.height = this.mapSize.grid;\n            } else if (item.type == thingType.recycle) {\n                str.x = item.pos.x;\n                str.y = item.pos.y;\n                str.width = item.width;\n                str.height = item.height;\n            }\n            // let itemX:number = util.mapSize.startGridPos.x+item.x*util.mapSize.grid;\n            // let itemY:number = util.mapSize.startGridPos.y-item.y*util.mapSize.grid;\n\n            if (str.y + str.height / 2 >= pos.y && pos.y >= str.y - str.height / 2 &&\n                str.x + str.width / 2 >= pos.x && pos.x >= str.x - str.width / 2) {\n                if (item.type == thingType.recycle) {\n                    // this.recycleFn();\n                    //默认垃圾为100\n                    call(100);\n                    return;\n                }\n                data = item.no;\n                break;\n            }\n        }\n\n        if (this.checkHeavenPool(data)) {\n            data = null;\n        }\n\n        if (data == this.userData.emptyBoxNo) {\n            data = null;\n        }\n\n        call(data);\n\n    }\n\n    /**\n     * 判断是否在存在\n     * @param no 第几个\n     */\n    checkNoExist(no: number): boolean {\n\n        let data = tool.GetArrData(\"no\", no, this.userData.pool);\n        if (data.level == -1 && data.state == 1) {\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * 获取用户道具数量\n     * @param type 类型\n     */\n    GetPropNum(type: number) {\n        let data: propInfo = tool.GetArrData(\"type\", type, this.userData.prop);\n        return data.num;\n    }\n\n    /**\n     * 获取道具持续时间\n     * @param type 类型\n     */\n    GetPropTime(type: number) {\n        let propData = this.propConfig;\n        console.log(propData, 'propData')\n        let data = tool.GetArrData(\"type\", type, propData);\n        return Number(data.time);\n    }\n\n    /**\n     * 使用哪个类型道具\n     * @param type 类型道具\n     */\n    UseProp(type: number) {\n        let num: number = Number(type) - 1;\n        this.userData.prop[num].time = this.GetPropTime(type);\n        this.userData.prop[num].use = propState.start;\n        this.userData.prop[num].num -= 1;\n        if (type == propType.cls) {                         //清屏            \n            cc.game.emit(NameTs.Tool_Effect_Name.Game_Prop_Cls);\n        } else if (type == propType.auto) {                  //自动合成\n            cc.game.emit(NameTs.Tool_Effect_Name.Game_Prop_Atuo);\n        }\n        else if (type == propType.shock) {                  //电击\n            cc.game.emit(NameTs.Tool_Effect_Name.Game_Prop_Shock);\n        }\n        else if (type == propType.shield) {                 //护盾\n            cc.game.emit(NameTs.Tool_Effect_Name.Game_Prop_Shield);\n        }\n        else if (type == propType.frozen) {                 //冰冻\n            cc.game.emit(NameTs.Tool_Effect_Name.Game_Prop_Frozen);\n        }\n        cc.game.emit(NameTs.Game_Tool_Use, type);\n        cc.game.emit(NameTs.Game_PropItem_Update);\n        console.log(\"使用成功\", type, this.userData.prop[num], propState.start);\n    }\n\n    /**\n     * 获取当前最高等级的炮塔数组2个以上的\n     */\n    GetTurretAuto() {\n        let pool: PoolInfo[] = tool.deepClone(this.userData.pool);\n        if (pool.length < 2) return false;\n        let sortFn = (a, b) => {\n            let num = b.level - a.level;\n            return num;\n        }\n        pool = pool.sort(sortFn);\n        let NewArr = [];\n        for (let i = 0; i < pool.length; i++) {\n            let arr = tool.GetArrData(\"level\", pool[i].level, pool, -1);\n            if (arr.length > 1 && this.checkUpdateLevel(arr[0].level + 1)) {\n                NewArr = arr;\n                break;\n            }\n        }\n        if (NewArr.length < 2) return false;\n        /**检查最高 */\n        if (!this.checkUpdateLevel(NewArr[0].level)) {\n            return false;\n        }\n        pool = null;\n        return NewArr.slice(0, 2);\n    }\n\n    /**获取用户当前提现金额 */\n    findGoldCash() {\n        let cash = this.userData.coin / this.userData.exchangeRate || 0\n        return TextCtr.triggerNumber(cash)\n    }\n    /**\n     * 发送快照\n     */\n    sendTurretData(call?: Function) {\n\n        if (this.isSendTurretData) {\n            console.error(\"未到发送快照时间;\")\n            return;\n        }\n        this.isSendTurretData = true;\n        let data: any = {};\n\n        if (this.userData.buyCount > 0 || this.userData.compoundTimes) {\n            data.userMapDetail = this.userData.pool;\n            this.userData.buyCount = 0;\n        }\n\n        if (this.lastData.compoundTimes !== this.userData.compoundTimes && this.userData.compoundTimes > 0) {\n            data.compoundTimes = this.userData.compoundTimes;\n            this.userData.compoundTimes = 0;\n        }\n        if (this.lastData.highestBatteryLevel !== this.userData.turretLevel) {\n            data.highestBatteryLevel = this.userData.turretLevel;\n            this.lastData.highestBatteryLevel = this.userData.turretLevel;\n        }\n        if (this.userData.termCoin > 0) {\n            data.point = this.userData.termCoin;\n            this.userData.termCoin = 0;\n        }\n        if (this.lastData.userBatteryNum !== this.userData.product && this.userData.product > 0) {\n            data.userBatteryNum = this.userData.product;\n            this.lastData.userBatteryNum = this.userData.product;\n        }\n\n        if (this.userData.resistAttackTimes > 0) {\n            data.resistAttackTimes = this.userData.resistAttackTimes;\n            this.userData.resistAttackTimes = 0;\n        }\n\n\n        XMSDK.trackUserProperties({\n            coin_balance: this.userData.coin + \"金币\",\n        });\n        this.userData.version += 1;\n        data.version = this.userData.version;\n        if (JSON.stringify(data) == \"{}\") {\n            return;\n        }\n        setTimeout(() => {\n            this.isSendTurretData = false;\n        }, 3000);\n        this.getdataStr({\n            url: UrlConst.gameLevelReport,\n            data,\n            success: () => {\n                this.isCheckTaskRed = true;\n                console.log(\"上传成功\")\n                call && call();\n            },\n            fail: () => {\n                console.log(\"上传失败\")\n            }\n        });\n    }\n\n    /**\n     * 金币快照\n     */\n\n    sendCoinData(call?: Function){\n\n        if(this.isSendCoinData)return;\n        this.isSendCoinData = true;\n        let data: any = {};\n        if (this.userData.termCoin > 0) {\n            data.point = this.userData.termCoin;\n            this.userData.termCoin = 0;\n        }\n        this.userData.version += 1;\n        data.version = this.userData.version;\n        setTimeout(() => {\n            this.isSendCoinData = false;\n        }, 3000);\n        this.getdataStr({\n            url: UrlConst.gameLevelReport,\n            data,\n            success: () => {\n                console.log(\"上传金币成功\")\n                call && call();\n            },\n            fail: () => {\n                console.log(\"上传金币失败\")\n            }\n        });\n\n    }\n\n    /**\n     * 获取当前等级炮塔的天降金币时间\n     */\n    GetHeavenTime(): number {\n\n        // let coinData = jsonSingleton.singleton.getJson(NameTs.coinData);\n        // //当前最高等级的炮塔\n        // let level: number = this.userData.turretLevel;\n        // //默认60s\n        // let time: number = 60;\n        // for (let i = 0; i < coinData.length; i++) {\n        //     let item = coinData[i];\n        //     if (item.min <= level && item.max >= level) {\n        //         time = item.time;\n        //         break;\n        //     }\n        // }\n\n        let time:number = tool.GetRandom(30,60);\n\n        return time;\n    }\n\n    /**\n     * 获取天降金币的位置 没有符合就null\n     */\n    GetHeavenPlace(): number {\n        //空的位置\n        let emptyPlace = tool.GetArrData(\"level\", -1, this.userData.pool, -1);\n        if (!emptyPlace) return null;\n        //符合的位置\n        let conformPlace = tool.GetArrData(\"state\", 1, emptyPlace, -1);\n        if (!conformPlace) return null;\n\n        //符合的数组\n        let newArr = [];\n        for (let i = 0; i < conformPlace.length; i++) {\n            let item = conformPlace[i];\n            let heavenItem = tool.GetArrData(\"no\", item.no, this.userData.heavenPool);\n            let isHaveEmptyBox = heavenItem.no == this.userData.emptyBoxNo;\n\n            if (item.no == heavenItem.no && heavenItem.id == null && !isHaveEmptyBox) {\n                newArr.push(item.no);\n            }\n        }\n        //随机一个\n        let randomNum = tool.GetRandom(0, newArr.length - 1);\n        return newArr[randomNum];\n\n    }\n\n    /**\n     * 获取炮弹数据\n     */\n    GetBulletData(type: number) {\n        let data = jsonSingleton.singleton.getJson(NameTs.bulletData);\n        return tool.GetArrData(\"type\", type, data);\n    }\n\n    /**\n     * 获取爆炸名字\n     */\n    GetBoomName(type: number) {\n        let data = jsonSingleton.singleton.getJson(NameTs.bulletData);\n        return tool.GetArrData(\"type\", type, data).boom;\n    }\n\n    /**\n     * 检查是否领过宝箱 \n     * 如果符合就输出宝箱id 不符合就null\n    */\n    checkTreasureShow(): number {\n        XMSDK.post({\n            url: UrlConst.treasureBox_Isget,\n            onSuccess: res => {\n                if (res.code === 0 && res.data && res.data.showBox != 1) {       //领取过\n                    return null;\n                }\n                else {\n                    let data = jsonSingleton.singleton.getJson(NameTs.treasureData);\n                    let treasureId: number = null;\n                    for (let i = 0; i < data.length; i++) {\n                        let item = data[i];\n                        if (item.min <= this.userData.turretLevel && item.max > this.userData.turretLevel) {\n                            treasureId = item.id;\n                            break;\n                        }\n                    }\n                    if (treasureId) {\n\n                        let checkId = (id) => {\n                            return id == treasureId;\n                        }\n                        let isExist: boolean = this.userData.haveTreasure.some(checkId);\n\n                        if (isExist) {\n                            return null;\n                        } else {\n                            return treasureId;\n                        }\n\n                    }\n                }\n            },\n            onFail: err => {\n\n            }\n        }\n        )\n        return null;\n    }\n\n    /**\n     * 保存宝藏状态\n     * @param id id\n     */\n    saveTreasureData(id: number) {\n        let checkId = (item) => {\n            return item == id;\n        }\n        let isExist: boolean = this.userData.haveTreasure.some(checkId);\n\n        if (isExist) {\n            console.error(\"宝藏存在过了\");\n        } else {\n            this.userData.haveTreasure.push(id);\n            this.setStorage(\"haveTreasure\", this.userData.haveTreasure);\n\n        }\n\n    }\n\n    /**\n     * 存本地数据\n     * @param key 键名\n     * @param value 值\n     */\n    setStorage(key: string, value: any) {\n        let dataString = JSON.stringify(value);\n        //let encrypted = encrypt.encrypt(dataString,this.secretkey,256);\n        cc.sys.localStorage.setItem(key, dataString);\n    }\n\n    /**\n     * 获取本地值\n     * @param key 键名\n     */\n    getStorage(key: string) {\n        let cipherText = cc.sys.localStorage.getItem(key);\n        if (cipherText == null || cipherText == \"\" || cipherText == undefined) {\n            return null;\n        }\n        //let value = JSON.parse(encrypt.decrypt(cipherText,this.secretkey,256));\n        return JSON.parse(cipherText);\n    }\n\n    /**\n     * 解锁新地方\n     */\n    unlockPlace() {\n\n        for (let i = 0; i < this.userData.pool.length; i++) {\n            let item = this.userData.pool[i];\n            if (item.state == 0) {\n                this.userData.pool[i].state = 1;\n                console.log(\"解锁新位置\", item.no);\n                cc.game.emit(NameTs.Game_Unlock_Place, item.no);\n                break;\n            }\n        }\n\n    }\n\n\n    /**\n     * \n     * @param url 地址\n     * @param data 数据\n     * @param call 回调\n     */\n    post(obj: { url: string, data?: any, success?: Function, fail?: Function }) {\n\n        XMSDK.post({\n            url: obj.url,\n            data: obj.data,\n            onSuccess: res => {\n                console.log(\"请求成功\" + obj.url, res)\n                if (res.code === 0) {\n                    obj.success && obj.success(res.data);\n                }\n                else {\n                    obj.fail && obj.fail(false);\n                }\n            },\n            onFail: err => {\n                obj.fail && obj.fail(false);\n            }\n        });\n\n    }\n\n\n  getdataStr(obj: { url: string, data?: any, success?: Function, fail?: Function }) {\n\n        XMSDK.getdataStr({\n            url: obj.url,\n            data: obj.data,\n            onSuccess: res => {\n                console.log(\"请求成功\" + obj.url, res)\n                if (res.code === 0) {\n                    obj.success && obj.success(res.data);\n                }\n                else {\n                    obj.fail && obj.fail(false);\n                }\n            },\n            onFail: err => {\n                obj.fail && obj.fail(false);\n            }\n        });\n\n    }\n\n\n    /**\n     * 判断是否当天\n     */\n\n    chekcToday() {\n\n        let day = new Date().getDate();\n        let isDay: boolean = false;\n        if (day == this.userData.GetDayTime) {\n            isDay = true;\n        } else {\n            isDay = false;\n            this.setStorage(this.localDiary.GetDayTime, day);\n        }\n\n        return isDay;\n    }\n\n    /**\n     * 预加载广告\n     * @param pos 位置\n     * @param isView 是否为信息流\n     */\n\n    preloadAd(pos, isView: boolean = false) {\n        if (!this.adPreObj[pos]) {\n            this.adPreObj[pos] = true;\n            if (isView) {\n                AdController.preViewAd(pos);\n            } else {\n                AdController.preVideoAd(pos);\n            }\n            console.log(\"加载\" + (isView ? \"信息流\" : \"视频\") + pos);\n        } else {\n            delete this.adPreObj[pos];\n            console.log(\"删除\" + (isView ? \"信息流\" : \"视频\") + pos + \"记录\");\n        }\n\n\n    }\n\n    /**\n     * 显示空地宝箱\n     */\n    showEmptyBox() {\n        if (this.userData.emptyBoxNo < 0) {\n            let location: number = this.checkPool();\n            if (!location) {\n                console.error(\"没有位置\");\n                // TrackMgr.airborne_gold({\n                //     activity_state: \"金币下发\",\n                //     distribution_status: false,\n                //     failure_reasons: \"没有位置\"\n                // })\n                TrackMgr.empty_treasure({\n                    activity_state: `宝箱下发`,\n                    distribution_status: false,\n                    failure_reasons: `当前没有空地；场地上有未开启宝箱`,\n                })\n\n                return;\n            }\n            TrackMgr.empty_treasure({\n                activity_state: `宝箱下发`,\n                distribution_status: true,\n            })\n\n            TrackMgr.AppBuyProductDialog_hcdg({\n                dialog_name_hcdg: `空降宝箱（未砸开）`\n            })\n\n            this.userData.emptyBoxNo = location;\n            cc.game.emit(NameTs.Show_Empty_Box);\n        }\n    }\n\n    /**\n     * 获取第一个任务\n     */\n    getFistTask(call: Function) {\n        //任务完成顺序\n        let taskOrder1: number[] = [2, 7, 4, 8, 6];\n        let taskOrder2: number[] = [1, 2, 3, 4];\n        //任务类型 0:日常 1:成就\n        let taskType: number = null;\n        //符合的任务\n        let str = [];\n\n        let checkTask = (arr) => {\n\n            if (taskType == null) {\n                call(null, taskType);\n                return;\n            }\n\n            let order = taskType == 0 ? taskOrder1 : taskOrder2;\n\n            for (let i = 0; i < order.length; i++) {\n\n                for (let j = 0; j < str.length; j++) {\n\n                    if (order[i] == str[j].taskType) {\n                        call(str[j], taskType);\n                        return;\n                    }\n\n                }\n\n            }\n\n        }\n\n        this.getdataStr({\n            url: UrlConst.task_day_main,\n            success: (res) => {\n                if (res.list) {\n                    let list = res.list;\n                    for (let i = 0; i < list.length; i++) {\n                        // let item = list[i];\n                        if (list[i].taskType == 2 && this.userData.localCompoundTime == 0) {\n                            this.userData.localCompoundTime = list[i].userTaskValue;\n                        }\n                        if (list[i].buttonType !== 4 && list[i].taskType !== 1) {\n                            taskType = 0;\n                            str.push(list[i]);\n                            //     break;\n                        }\n                    }\n                    if (taskType == null) {\n                        str = [];\n                        this.getdataStr({\n                            url: UrlConst.achievement_main,\n                            success: (res) => {\n                                if (res && res.list) {\n                                    let list = res.list;\n                                    for (let i = 0; i < list.length; i++) {\n                                        if (list[i].buttonType !== 4) {\n                                            taskType = 1;\n                                            // break;\n                                            str.push(list[i]);\n                                        }\n                                    }\n                                    checkTask(str);\n                                }\n                            }\n                        });\n                    } else {\n                        checkTask(str);\n                    }\n\n                }\n            }\n        });\n\n    }\n\n    /**\n     * 发送看视频获取炮塔记录\n     */\n    sendTurretNum() {\n\n        this.post({\n            url: UrlConst.watchVideoAddBattery,\n            success: () => {\n                console.log(\"记录看视频获得炮塔任务\")\n                cc.game.emit(NameTs.Game_Task_updata);\n            },\n            fail: () => {\n                console.log(\"记录看视频获得炮塔任务失败\")\n            }\n        })\n\n    }\n    setTempParm(name: string, value: any) {\n        this.tempParm[name] = value\n    }\n    getTempParm(name: string) {\n        return this.tempParm[name]\n    }\n\n\tgetMapdata(bigmap)\n\t{\n\t\t//jsonArr.gkData\n\t\tlet data = jsonSingleton.singleton.getJson(NameTs.gkData);\n\t\t//console.log(bigmap + \" jsonArr.gkData ----------------------------- :\" +  JSON.stringify( data ) )\n\t\tlet nwdata = []\n\t\t\n\t\tfor (let i=0;i<data.length;i++) {\n\t\t\t//console.log(\"-------# \" + JSON.stringify(data[i]) )\n\t\t\tif( data[i][\"levelNo\"] == bigmap+\"\")\n\t\t\t{\n\t\t\t\tnwdata.push(data[i]))\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn nwdata\n\t}\n\n    /**\n     * 是否为b用户\n     */\n    checkTestB(name: string): boolean {\n        let user:string = AssistCtr.isATest()?\"A\":\"B\";\n        return this.AB_Test[name][user]==\"true\"?true:false;\n    }\n\n    /**离线增加炮塔次数*/\n    offlineTurretProduct() {\n        //当前时间\n    let nowTime: number = new Date().getTime();\n        //上一次时间\n        let lastTime: number = this.getStorage(this.localDiary.offlineTime) || new Date().getTime();\n        //每30秒一个 换算\n        let time: number = Math.floor((nowTime - lastTime) / 1000 / 30);\n        console.log('离线增加' + time + \"个炮塔,离线时间为：\" + (nowTime - lastTime) / 1000);\n        if (time <= 0) {\n            return;\n        }\n        if (this.userData.product + time > 20) {\n            this.userData.product = this.userData.product > 20 ? this.userData.product : 20;\n        } else {\n            this.productTurret(time);\n        }\n        this.setStorage(this.localDiary.offlineTime, null);\n    }\n\n\n    \n}\n\n\nexport default new util();"]}