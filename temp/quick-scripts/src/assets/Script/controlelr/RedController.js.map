{"version":3,"sources":["assets\\Script\\controlelr\\RedController.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import { onPrizeRedItemData } from \"../onPrizeGet/OnPrizeGet\";\nimport { UrlConst } from \"../server/UrlConst\";\nimport XMSDK from \"../server/xmsdk_cocos/XMSDK\";\nimport TrackMgr from \"../TrackMgr/TrackMgr\";\nimport util from \"../util/util\";\n\nexport interface onPrizeData {\n    onPrizeRedData: Array<onPrizeRedItemData>           //全部红包全部信息\n}\n\nclass RedController {\n    //检查任务红点\n    checkTaskRed(call) {\n        let okNum = 0;\n        util.getdataStr({\n            url: UrlConst.task_day_main,\n            success: (res) => {\n                if (res.list) {\n                    let list = res.list;\n                    for (let i = 0; i < list.length; i++) {\n                        if (list[i].buttonType == 3) {\n                            okNum++;\n                        }\n                    }\n                    util.getdataStr({\n                        url: UrlConst.achievement_main,\n                        success: (res) => {\n                            if (res && res.list) {\n                                let list = res.list;\n                                for (let i = 0; i < list.length; i++) {\n                                    if (list[i].buttonType == 3) {\n                                        okNum++;\n                                    }\n                                }\n                                call && call(okNum)\n                            }\n                        }\n                    });\n                }\n            }\n        });\n    }\n\n    signRed: cc.Node = null;\n    onPrizeData = null;\n    //初始化签到处红点信息\n    initSignRedData(redNode: cc.Node) {\n        this.signRed = redNode;\n\n        XMSDK.getdataStr({\n            url: UrlConst.sign_main,\n            onSuccess: res => {\n                if (res.code === 0 && res.data) {\n                    if (res && res.data) {\n                        util.isOkSign = res.data.todayChecked;\n                    }\n                }\n            },\n            onFail: err => {\n\n            }\n        }\n        )\n\n        XMSDK.getdataStr({\n            url: UrlConst.onPrizeGetRewardMain,\n            onSuccess: res => {\n                if (res.code === 0 && res.data) {\n                    this.onPrizeData = res.data;\n                } else {\n                    XMSDK.toast(res.message || '网络出错~', 2.5, 1);\n                }\n            },\n            onFail: res => {\n\n            }\n        })\n    }\n\n    //检查首页签到红点\n    checkMainSignRed() {\n        let self = this;\n        if (self.signRed && self.onPrizeData) {\n            let allRedData = self.onPrizeData.onPrizeRedData;\n            let isHaveGet = false;  //是否有可领取的红包\n            let curTime = util.onlineTimeNum;\n            let redData: onPrizeRedItemData = null;\n            for (let i = 0; i < allRedData.length; i++) {\n                redData = allRedData[i];\n                if (redData.state == 0 && redData.waitTime <= curTime) {\n                    isHaveGet = true;\n                }\n            }\n\n            if (!util.isOkSign || isHaveGet) {\n                if (!self.signRed.active) {\n                    self.signRed.active = true;\n\n                    TrackMgr.little_red_dots({\n                        activity_state: \"小红点展示\",\n                        activity_position: \"签到\",\n                    })\n\n\n                    if (redData) {\n                        TrackMgr.Online_rewards({\n                            activity_state: \"在线奖励达成\",\n                            reward_state: `${redData.waitTime / 60}分钟`,\n                        })\n                    }\n                }\n            }\n            else if (self.signRed.active) {\n                self.signRed.active = false;\n            }\n        }\n    }\n\n    wheelRed: cc.Node = null;\n    wheelCount = 0; //转盘剩余次数\n    initGoldWheelData(wheelRed: cc.Node) {\n        this.wheelRed = wheelRed;\n        XMSDK.getdataStr({\n            url: UrlConst.goldWheel_index,\n            onSuccess: res => {\n                if (res.code === 0) {\n                    this.wheelCount = res.data.times;\n\n                    if(this.wheelCount > 0){\n                        this.checkMainGoldWheelRed(true);\n                    }                    \n                }\n                else {\n\n                }\n            },\n            onFail: err => {\n\n            }\n        })\n    }\n\n    checkMainGoldWheelRed(state?: boolean) {        \n        if (this.wheelRed) {\n            if (state != null) {\n                this.wheelRed.active = state;\n            }\n            else {\n                if (util.userData.product <= 5) {\n                    if(this.wheelCount > 0){\n                        if (!this.wheelRed.active) {\n                            this.wheelRed.active = true;\n                            TrackMgr.little_red_dots({\n                                activity_state: \"小红点展示\",\n                                activity_position: \"大转盘\",\n                            })\n                        }\n                    }\n                }\n                else if (this.wheelRed.active) {\n                    this.wheelRed.active = false;\n                }\n            }\n        }\n    }\n}\n\nexport default new RedController();"]}