{"version":3,"sources":["assets\\Script\\Assist\\TextCtr.ts"],"names":[],"mappings":";;;;;;;AAAA,OAAO;AACM,QAAA,OAAO,GAAG;IACnB;;;;OAIG;IACH,YAAY,EAAZ,UAAa,IAAY,EAAE,KAAyB;QAAzB,sBAAA,EAAA,UAAyB;QAChD,IAAI,IAAI,EAAE;YACN,KAAK,IAAI,CAAC,IAAI,KAAK,EAAE;gBACjB,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAA;aAC1C;SACJ;QACD,OAAO,IAAI,CAAA;IACf,CAAC;IACD,aAAa,EAAb,UAAc,IAAY,EAAE,KAAiB;QAAjB,sBAAA,EAAA,SAAiB;QACzC,OAAO,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAA;IAC9B,CAAC;IACD;;;OAGG;IACH,mBAAmB,EAAnB,UAAoB,GAAW;QAC3B,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,IAAI,CAAC,CAAA;QAC9B,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,IAAI,GAAG,EAAE,CAAC,CAAA;QACnC,IAAI,CAAC,GAAG,GAAG,GAAG,IAAI,CAAA;QAElB,IAAI,IAAI,GAAW,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAA;QAC5C,IAAI,MAAM,GAAW,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAA;QAC9C,IAAI,MAAM,GAAW,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAA;QAE9C,OAAO,IAAI,GAAG,GAAG,GAAG,MAAM,GAAG,GAAG,GAAG,MAAM,CAAA;IAC7C,CAAC;IACD;;;OAGG;IACH,gBAAgB,EAAhB,UAAiB,GAAW;QACxB,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,EAAE,CAAC,CAAA;QAC5B,IAAI,CAAC,GAAG,GAAG,GAAG,IAAI,CAAA;QAElB,IAAI,MAAM,GAAW,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAA;QAC9C,IAAI,MAAM,GAAW,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAA;QAE9C,OAAO,MAAM,GAAG,GAAG,GAAG,MAAM,CAAA;IAChC,CAAC;CACJ,CAAA","file":"","sourceRoot":"/","sourcesContent":["//文本处理类\nexport const TextCtr = {\n    /**\n     * 使用parms的值一一替换text中的{parm}\n     * @param text \n     * @param parms \n     */\n    triggerToast(text: string, parms: Array<string> = []) {\n        if (text) {\n            for (let m in parms) {\n                text = text.replace(/{parm}/, parms[m])\n            }\n        }\n        return text\n    },\n    triggerNumber(info: number, limit: number = 2) {\n        return info.toFixed(limit)\n    },\n    /**\n     * sec秒转为时:分:秒格式\n     * @param sec \n     */\n    formatHourAndMinute(sec: number) {\n        let h = Math.floor(sec / 3600)\n        let m = Math.floor(sec % 3600 / 60)\n        let s = sec % 3600\n\n        let hour: string = h < 10 ? \"0\" + h : \"\" + h\n        let minute: string = m < 10 ? \"0\" + m : \"\" + m\n        let second: string = s < 10 ? \"0\" + s : \"\" + s\n\n        return hour + \":\" + minute + \":\" + second\n    },\n    /**\n     * sec秒转为分:秒格式\n     * @param sec \n     */\n    formatOnlyMinute(sec: number) {\n        let m = Math.floor(sec / 60)\n        let s = sec % 3600\n\n        let minute: string = m < 10 ? \"0\" + m : \"\" + m\n        let second: string = s < 10 ? \"0\" + s : \"\" + s\n\n        return minute + \":\" + second\n    }\n}"]}