{"version":3,"sources":["assets\\Script\\server\\xmsdk_cocos\\Adapter\\Bridge\\AndroidCocosBridge.ts"],"names":[],"mappings":";;;;;;AAAA;IAAA;IAmCA,CAAC;IA5BkB,+BAAY,GAA3B;QACI,IAAI,CAAC,MAAM,CAAC,kBAAkB,CAAC,qBAAqB,CAAC,EAAE;YACnD,MAAM,CAAC,kBAAkB,CAAC,qBAAqB,CAAC,GAAG,EAAE,CAAC;SACzD;IACL,CAAC;IAEa,uBAAI,GAAlB,UAAmB,UAAkB,EAAE,GAAa,EAAE,WAAuB;QACzE,IAAI,CAAC,UAAU,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,EAAE;YACnC,OAAO;SACV;QAED,kBAAkB,CAAC,YAAY,EAAE,CAAC;QAElC,IAAI,SAAS,GAAY,IAAI,CAAC,SAAS,CAAC,GAAG,IAAI,EAAE,CAAC,CAAC;QACnD,IAAI,oBAAoB,GAAG,EAAE,CAAC;QAE9B,IAAI,WAAW,EAAE;YACb,IAAI,IAAI,GAAG,MAAM,GAAG,CAAC,EAAE,kBAAkB,CAAC,oBAAoB,CAAC,CAAC;YAChE,oBAAoB,GAAG,kBAAkB,CAAC,qBAAqB,GAAG,GAAG,GAAG,IAAI,CAAC;YAC7E,MAAM,CAAC,kBAAkB,CAAC,qBAAqB,CAAC,CAAC,IAAI,CAAC,GAAG,UAAC,GAAG;gBACzD,WAAW,CAAC,GAAG,CAAC,CAAC;YACrB,CAAC,CAAC;SACL;QAED,OAAO,GAAG,CAAC,UAAU,CAAC,gBAAgB,CAAC,kBAAkB,CAAC,UAAU,EAAE,kBAAkB,CAAC,WAAW,EAChG,4EAA4E,EAC5E,UAAU,EAAE,SAAS,EAAE,oBAAoB,CAAC,CAAC;IACrD,CAAC;IAjCD,UAAU;IACK,6BAAU,GAAW,kDAAkD,CAAC;IACxE,8BAAW,GAAW,MAAM,CAAC;IAC7B,wCAAqB,GAAG,sBAAsB,CAAC;IAC/C,uCAAoB,GAAY,CAAC,CAAC;IA8BrD,yBAAC;CAnCD,AAmCC,IAAA;kBAnCoB,kBAAkB","file":"","sourceRoot":"/","sourcesContent":["export default class AndroidCocosBridge {\n    //安卓端调用的名字\n    private static CLASS_NAME: string = \"org/cocos2dx/javascript/bridge/CocosBridgeHandle\";\n    private static METHOD_NAME: string = \"call\";\n    private static COCOS_CALLBACK_PREFIX = \"CocosBridgeCallbacks\";\n    private static sCurCallbackFunCount : number = 0;\n\n    private static checkAndInit(): void {\n        if (!window[AndroidCocosBridge.COCOS_CALLBACK_PREFIX]) {\n            window[AndroidCocosBridge.COCOS_CALLBACK_PREFIX] = {};\n        }\n    }\n\n    public static call(methodName: string, arg ?: object, callBackFun ?: Function): null {\n        if (!methodName || !methodName.trim()) {\n            return;\n        }\n\n        AndroidCocosBridge.checkAndInit();\n\n        let nativeArg : string = JSON.stringify(arg || {});\n        let cocosCallbackFunName = \"\";\n\n        if (callBackFun) {\n            let name = \"call\" + (++AndroidCocosBridge.sCurCallbackFunCount);\n            cocosCallbackFunName = AndroidCocosBridge.COCOS_CALLBACK_PREFIX + \".\" + name;\n            window[AndroidCocosBridge.COCOS_CALLBACK_PREFIX][name] = (res) => {\n                callBackFun(res);\n            };\n        }\n\n        return jsb.reflection.callStaticMethod(AndroidCocosBridge.CLASS_NAME, AndroidCocosBridge.METHOD_NAME,\n            \"(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;\",\n            methodName, nativeArg, cocosCallbackFunName);\n    }\n}"]}