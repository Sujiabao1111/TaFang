{"version":3,"sources":["assets\\Script\\server\\xmsdk_cocos\\Adapter\\AndroidNativePlatform.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import IPlatform from \"./Base/IPlatform\";\nimport { LoadAdViewConfigType, ShowAdViewConfigType } from \"./Type/AdViewConfig\";\nimport AdConfigType from \"./Type/AdConfigType\";\nimport CommonSettingType from \"./Type/CommonSettingType\";\nimport LaunchSdkPageType from \"./Type/LaunchSdkPageType\";\nimport AndroidCocosBridge from \"./Bridge/AndroidCocosBridge\";\nimport { AppInfo } from \"../Config/AppInfo\";\nimport mock from \"../mock1\";\n\n/**\n * 安卓原生\n */\nexport default class AndroidNativePlatform implements IPlatform {\n\n    /**\n     * 与SDK交互通信\n     * @param funcName 方法名\n     * @param params 参数\n     * @param callback 回调\n     */\n    call(funcName: string, params?: any, callback?: Function) {\n        return AndroidCocosBridge.call(funcName, params, callback);\n    }\n\n    getAdheadString(): string {\n        return AndroidCocosBridge.call(\"createRequestHeaderStr\");\n    }\n\n    getPheadString(): string {\n        if (AppInfo.isLocal) {\n            return mock.PHEAD;\n        }\n        return AndroidCocosBridge.call(\"getPhead\");\n    }\n    toNewIdiomAnswer() {\n        return AndroidCocosBridge.call(\"toNewIdiomAnswer\")\n    }\n    openCalendarPermit() {\n        AndroidCocosBridge.call(\"openCalendarPermit\");\n    }\n    checkCalendarPermit() {\n        return AndroidCocosBridge.call(\"checkCalendarPermit\");\n    }\n    setCalendarPrompt(isStart: boolean) {\n        AndroidCocosBridge.call(\"setCalendarPrompt\", { isStart: isStart });\n    }\n    loadAdView(adConfig: LoadAdViewConfigType, callback?: Function) {\n        AndroidCocosBridge.call(\"loadAdView\", adConfig);\n    }\n\n    hideAdView(adConfig: AdConfigType) {\n        AndroidCocosBridge.call(\"hideAdView\", adConfig);\n    }\n\n    showAdView(adConfig: ShowAdViewConfigType) {\n        AndroidCocosBridge.call(\"showAdView\", adConfig);\n    }\n\n    loadAdSdk(adConfig: AdConfigType) {\n        AndroidCocosBridge.call(\"loadAdSdk\", adConfig);\n    }\n\n    showAd(adConfig: AdConfigType) {\n        AndroidCocosBridge.call(\"showAd\", adConfig);\n    }\n\n    enableUploadAdSdkStatistic(args: CommonSettingType) {\n    }\n\n    launchSceneSdkPage(launchParams: LaunchSdkPageType) {\n        AndroidCocosBridge.call(\"launchSceneSdkPage\", launchParams);\n    }\n\n    signRequestBody(args: string, callback: Function) {\n        let signStr: string = AndroidCocosBridge.call(\"signRequestBody\", { data: args });\n        callback(signStr);\n    }\n\n    getNetworkState(callback: Function) {\n        let state: string = AndroidCocosBridge.call(\"getNetworkState\");\n        callback(state);\n    }\n\n    recordLog(tag: string, content: string) {\n        AndroidCocosBridge.call(\"recordLog\", { tag: tag, content: content })\n    }\n    updateHealthValue(health: number) {\n        AndroidCocosBridge.call(\"updateHealthValue\", { \"health\": health })\n    }\n    isTestServer() {\n        let call = AndroidCocosBridge.call(\"isTestServer\");\n        return call == \"true\";\n    }\n\n    isDebug() {\n        let call = AndroidCocosBridge.call(\"isDebug\");\n        return call == \"true\";\n    }\n\n    getAppName() {\n        let name =  AndroidCocosBridge.call(\"getAppName\");\n        return name;\n    }\n\n    enableOnResumeOnPause(args: { enable: boolean }) {\n        console.log(\"启动后台监听2\", args)\n        AndroidCocosBridge.call('enableOnResumeOnPause', args, null);\n    }\n    retryToken() {\n        AndroidCocosBridge.call(\"retryToken\")\n    }\n\n    authWechat() {\n        AndroidCocosBridge.call(\"authWechat\");\n    }\n    requestAlipayAuth() {\n        AndroidCocosBridge.call(\"requestAlipayAuth\");\n    }\n    /**\n     * 打开新人红包\n     */\n    OpenNewBirdRed(callback?: Function) {\n        AndroidCocosBridge.call('OpenNewBirdRed', {}, callback);\n    }\n\n    /**\n     * 消除时打开游戏内红包\n     * @param type (\"1 全屏广告3秒关闭 2 激励视频 看完可关闭 3 不看广告\")\n     * @param adid 全屏广告或激励视频的广告id\n     */\n    OpenGameRed(type: number, adid: number, callback?: Function) {\n        var obj = {\n            'type': type,\n            'adid': adid,\n        }\n        AndroidCocosBridge.call('OpenGameRed', obj, callback);\n    }\n\n    /**\n     * 打开余额弹窗\n     * @param callback \n     */\n    OpenBalanceDialog(callback?: Function) {\n        AndroidCocosBridge.call('OpenBalanceDialog', {}, callback);\n    }\n\n    /**\n     * 获取用户余额\n     * @param callback \n     */\n    ReqBalance(callback: Function) {\n        AndroidCocosBridge.call('ReqBalance', {}, callback);\n    }\n\n    /**\n     * 获取用户信息\n     */\n    ReqUserInfo(callback: Function) {\n        AndroidCocosBridge.call('ReqUserInfo', {}, callback);\n    }\n\n    /** \n     * 展示通用弹窗\n     */\n    OpenGeneralDialog(coin: number, multiple: number, callback?: Function) {\n        var obj: any = {\n            'coin': coin,\n            'multiple': multiple,\n        };\n\n        if (coin >= 200) {\n            obj.exchangeMoney = coin / 10000.0;\n        }\n\n        AndroidCocosBridge.call('OpenGeneralDialog', obj, callback);\n    }\n\n    /**\n     * 震动\n     * @param time 时长\n     */\n    setVibrator(time: number, callback?: Function) {\n        var obj = {\n            'time': time,\n        }\n        AndroidCocosBridge.call('setVibrator', obj, callback);\n    }\n\n    /**\n     * 提交埋点\n     * @param obj 神策参数\n     * @param callback 回调\n     */\n    track(obj: any, callback?: Function) {\n        AndroidCocosBridge.call('track', obj, callback);\n    }\n    /**\n     * 提交预置属性\n     * @param obj 神策参数\n     * @param callback 回调\n     */\n    trackUserProperties(obj: any, callback?: Function) {\n        AndroidCocosBridge.call('trackUserProperties', obj, callback);\n    }\n\n    /**\n     * 消除启动黑屏\n     */\n    finishCocosLaunch() {\n        AndroidCocosBridge.call('finishCocosLaunch');\n    }\n\n    /**\n     * 更新当前无尽等级\n     * @param current_level 等级\n     * @param callback 回调\n     */\n    updateCurrentLevel(current_level: number, callback?: Function) {\n        var obj = {\n            'current_level': current_level\n        }\n        AndroidCocosBridge.call('updateCurrentLevel', obj, callback);\n    }\n\n    /**\n     * 更新当前闯关等级\n     * @param current_pass_level 过关等级\n     * @param callback 回调\n     */\n    updateCurrentPassLevel(current_pass_level: number, callback?: Function) {\n        var obj = {\n            'current_pass_level': current_pass_level\n        }\n        AndroidCocosBridge.call('updateCurrentPassLevel', obj, callback);\n    }\n    /**\n     * 获取刘海高度\n     */\n    getLiuHaiHeight() {\n        return AndroidCocosBridge.call(\"getLiuHaiHeight\");\n    }\n    /**\n     * 退出游戏\n     */\n    exitGame() {\n        AndroidCocosBridge.call(\"exitGame\");\n    }\n    /**\n     * \n     * 启用后退键监控\n     */\n    enableOnBackpressed(enable: boolean) {\n        AndroidCocosBridge.call('enableOnBackpressed', { 'enable': enable }, null);\n    }\n    /**\n     * 获取网络状态\n     */\n    isNetworkConnected() {\n        return AndroidCocosBridge.call('isNetworkConnected');\n    }\n    /**\n     * 红包信息\n     */\n    notifyConfig(obj) {\n        AndroidCocosBridge.call('notifyConfig', obj, null);\n\n    }\n    /**\n     * 反馈界面\n     */\n    showCustomerService() {\n        AndroidCocosBridge.call(\"showCustomerService\");\n    }\n\n    /**\n     * 注销界面\n     */\n    cancelAccount() {\n        AndroidCocosBridge.call(\"cancelAccount\");\n    }\n\n    /**\n    * 下载apk的方法\n    */\n    downloadNewVersionApk() {\n        AndroidCocosBridge.call(\"downloadNewVersionApk\");\n    }\n    /**\n     * 用户是否使用了更新有奖去更新apk\n     */\n    hasNewVersionReward() {\n        return AndroidCocosBridge.call(\"hasNewVersionReward\");\n    }\n\n    /**\n    * 重置更新有奖打点，下次不再调用\n    */\n    resetNewVersionReward() {\n        AndroidCocosBridge.call(\"resetNewVersionReward\");\n    }\n\n    /**\n     * 获取非强制更新版本\n     */\n    getNewVersionName() {\n        return AndroidCocosBridge.call(\"getNewVersionName\");\n    }\n\n    /**\n     * 判断通知栏权限是否开启\n     */\n    isNotificationEnabled() {\n        return AndroidCocosBridge.call(\"isNotificationEnabled\");\n    }\n\n    /**\n    * 跳转到通知设置界面\n    */\n    startNotificationSetting() {\n        AndroidCocosBridge.call(\"startNotificationSetting\");\n    }\n\n}"]}