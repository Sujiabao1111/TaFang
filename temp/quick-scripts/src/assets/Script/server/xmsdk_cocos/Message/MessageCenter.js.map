{"version":3,"sources":["assets\\Script\\server\\xmsdk_cocos\\Message\\MessageCenter.ts"],"names":[],"mappings":";;;;;AAAA;;;;;;;GAOG;;;AAEH,IAAiB,aAAa,CA+D7B;AA/DD,WAAiB,aAAa;IACf,uBAAS,GAAG,EAAE,CAAA;IACzB;;OAEG;IACH,SAAgB,gBAAgB,CAAC,OAAe,EAAE,QAAkB;QAChE,IAAI,CAAC,CAAC,OAAO,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,QAAQ,IAAI,UAAU,CAAC,EAAE;YAC5D,OAAO;SACV;QAED,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,OAAO,CAAC,EAAE;YACnC,aAAa,CAAC,SAAS,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC;SACzC;QAED,IAAI,aAAa,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,EAAE;YAC1D,aAAa,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;SACnD;IACL,CAAC;IAZe,8BAAgB,mBAY/B,CAAA;IAED;;OAEG;IACH,SAAgB,kBAAkB,CAAC,OAAe,EAAE,QAAkB;QAClE,IAAI,CAAC,OAAO,IAAI,CAAC,QAAQ,EAAE;YACvB,OAAO;SACV;QACD,IAAM,iBAAiB,GAAG,aAAa,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;QAC3D,IAAI,iBAAiB,EAAE;YACnB,IAAM,KAAK,GAAG,iBAAiB,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;YAClD,iBAAiB,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;SACtC;IACL,CAAC;IATe,gCAAkB,qBASjC,CAAA;IAED;;OAEG;IACH,SAAgB,4BAA4B,CAAC,OAAe;QACxD,IAAI,CAAC,OAAO,EAAE;YACV,OAAO;SACV;QAED,OAAO,aAAa,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;IAC5C,CAAC;IANe,0CAA4B,+BAM3C,CAAA;IAED;;OAEG;IACH,SAAgB,WAAW,CAAC,OAAe,EAAE,KAAW;QACpD,IAAI,CAAC,OAAO,EAAE;YACV,OAAO;SACV;QAED,IAAM,iBAAiB,GAAG,aAAa,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;QAE3D,IAAI,iBAAiB,IAAI,iBAAiB,CAAC,MAAM,GAAG,CAAC,EAAE;YACnD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,iBAAiB,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBAC/C,IAAI;oBACA,IAAM,WAAW,GAAG,iBAAiB,CAAC,CAAC,CAAC,CAAC;oBACzC,WAAW,IAAI,WAAW,CAAC,KAAK,CAAC,CAAC;iBACrC;gBAAC,OAAO,CAAC,EAAE,GAAG;aAClB;SACJ;IACL,CAAC;IAfe,yBAAW,cAe1B,CAAA;AACL,CAAC,EA/DgB,aAAa,GAAb,qBAAa,KAAb,qBAAa,QA+D7B","file":"","sourceRoot":"/","sourcesContent":["/*\n * @Descripttion: \n * @version: \n * @Author: sueRimn\n * @Date: 2020-03-09 20:20:36\n * @LastEditors: sueRimn\n * @LastEditTime: 2020-03-09 20:32:01\n */\n\nexport namespace MessageCenter {\n    export let callbacks = {}\n    /**\n     * 注册消息回调通知， message：注册的事件名称， callback：回掉执行的方法\n     */\n    export function registerCallback(message: string, callback: Function) {\n        if ((!message || !callback) || (typeof callback != 'function')) {\n            return;\n        }\n\n        if (!MessageCenter.callbacks[message]) {\n            MessageCenter.callbacks[message] = [];\n        }\n\n        if (MessageCenter.callbacks[message].indexOf(callback) == -1) {\n            MessageCenter.callbacks[message].push(callback);\n        }\n    }\n\n    /**\n     * 反注册消息回调通知， message：注册的事件名称， callback：回掉执行的方法\n     */\n    export function unRegisterCallback(message: string, callback: Function) {\n        if (!message || !callback) {\n            return;\n        }\n        const callbacksWithType = MessageCenter.callbacks[message];\n        if (callbacksWithType) {\n            const index = callbacksWithType.indexOf(callback);\n            callbacksWithType.splice(index, 1);\n        }\n    }\n\n    /**\n     * 删除同一消息下的所有回调通知\n     */\n    export function removeAllCallbackWithMessage(message: string) {\n        if (!message) {\n            return;\n        }\n\n        delete MessageCenter.callbacks[message];\n    }\n\n    /**\n     * 发送消息\n     */\n    export function sendMessage(message: string, value?: any) {\n        if (!message) {\n            return;\n        }\n\n        const callbacksWithType = MessageCenter.callbacks[message];\n\n        if (callbacksWithType && callbacksWithType.length > 0) {\n            for (var i = 0; i < callbacksWithType.length; i++) {\n                try {\n                    const callbackFun = callbacksWithType[i];\n                    callbackFun && callbackFun(value);\n                } catch (e) { }\n            }\n        }\n    }\n}"]}