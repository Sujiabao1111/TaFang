{"version":3,"sources":["assets\\Script\\server\\xmsdk_cocos\\XMSDK.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["/**\n * @description 广告sdk\n */\n\n// 初始化\nimport { AppInfo, setUpTesting } from './Config/AppInfo';\nimport PlatformFactory from \"./Adapter/PlatformFactory\";\nimport { AdUtil } from './AD/AdUtil';\nimport { AdviewUtil } from './AD/AdviewUtil';\nimport LaunchSdkPageType from './Adapter/Type/LaunchSdkPageType';\nimport { XMLoad } from './Utils/XMLoad';\nimport { ServerConfig } from '../UrlConst';\nimport NameTs from '../../common/NameTs';\nimport pageTs from '../../common/pageTs';\nimport Ajax from '../ServerMgr/Ajax';\nimport { AssistCtr } from '../../Assist/AssistCtr';\n\nexport default class XMSDK {\n\n    // 初始化SDK\n    static initialize() {\n        console.log('=======  开始初始化商业化SDK  =======');\n        // 获取adHead  如果 调用交互接口获取AdHead报错，直接调用连接上的adhead\n\n        setUpTesting(PlatformFactory.Ins.isTestServer());//获取测试or正式\n        AppInfo.phead = JSON.parse(PlatformFactory.Ins.getPheadString());\n        // AppInfo.phead = mock1.PHEAD;\n\t\tconsole.log(\"处理数据-----------------------\")\n        AppInfo.version = \"v1.2.9\"\n        console.log('获取取phead');\n\n        // 广告初始化 游戏中只需要初始化一次\n        AdviewUtil.init();//初始化信息流\n        AdUtil.init();//初始化激励视频/插屏广告\n        console.log('=======  结束初始化商业化SDK  =======')\n    }\n\n    /**\n     * 与SDK交互通信\n     * @param funName 方法名\n     * @param params 参数\n     * @param callback 回调\n     */\n    static call(funcName: string, params?: any, callback?: Function): any {\n        return PlatformFactory.Ins.call(funcName, params, callback);\n    }\n\n    /**\n     * 获取AdHead\n     */\n    static getAdHead() {\n        return PlatformFactory.Ins.getAdheadString();\n    }\n\n    /**\n     * 获取当前服务器Host\n     */\n    static getSeverHost() {\n        return AppInfo.appHost;\n    }\n\n    /**\n     * 是否为debug模式\n     */\n    static isDebug() {\n        return PlatformFactory.Ins.isDebug();\n    }\n\n    /**\n     * 是否为测试服\n     */\n    static isTestServer() {\n        return PlatformFactory.Ins.isTestServer();\n    }\n    /**\n         * 获取app名字\n         */\n    static getAppName(){\n        return PlatformFactory.Ins.getAppName&&PlatformFactory.Ins.getAppName();\n    }\n\n\n    /**\n     * 设置震动\n     * @param time 时长，单位毫秒\n     * @param callback 回调\n     */\n    static setVibrator(time: number, callback?: Function) {\n        PlatformFactory.Ins.setVibrator(time, callback);\n    }\n\n    /**\n     * 通用跳转 跳转网页等\n     * @param param 参数\n     */\n    static launchSceneSdkPage(param: LaunchSdkPageType) {\n        PlatformFactory.Ins.launchSceneSdkPage(param);\n    }\n\n    /**\n     * 显示一个toast\n     * @param text 文本\n     * @param duration 延迟关闭，默认1.5s\n     * @param pos toast位置，0顶部，1中间，2底部，默认底部\n     */\n    static toast(text: string, duration?: number, pos?: number, state?: number) {\n        AssistCtr.showToastTip(text);\n        // XMToast.showText(text);\n        //XMToast.ShowText(text, duration, pos);\n    }\n\n    /**\n     * @msg: 显示loading\n     * @param text load文案，可不传\n     */\n    static showLoading(text?: string,) {\n        XMLoad.ShowLoading(text);\n    }\n\n    /**\n     * @msg: 隐藏loading\n     */\n    static hideLoading() {\n        XMLoad.HideLoading();\n    }\n\n    /**\n     * 提交埋点\n     * @param obj 神策参数\n     * @param callback 回调\n     */\n    static track(obj: { eventName: string, props: any }, callback?: Function) {\n        PlatformFactory.Ins.track(obj, callback);\n    }\n\n    /**\n    * 提交神策预置属性\n    * @param obj 神策参数\n    * @param callback 回调\n    */\n    static trackUserProperties(obj: any, callback?: Function) {\n        PlatformFactory.Ins.trackUserProperties(obj, callback);\n    }\n\n\n    /**\n     * 消除启动黑屏\n     */\n    static finishCocosLaunch() {\n        PlatformFactory.Ins.finishCocosLaunch();\n    }\n\n    /**\n     * 获取刘海高度\n     */\n    static getLiuHaiHeight() {\n        return PlatformFactory.Ins.getLiuHaiHeight();\n    }\n    /**\n     * 获取导航栏高度\n     */\n    static getNavigationBarHeight() {\n        return PlatformFactory.Ins.getNavigationBarHeight();\n    }\n    /**\n     * 获取网页host\n     */\n    static getHost() {\n        return AppInfo.host;\n    }\n    /**\n     * 退出APP\n     */\n    static exitGame() {\n        PlatformFactory.Ins.exitGame();\n    }\n    /**\n     * 启动/关闭 前后台监听\n     */\n    static enableOnResumeOnPause(enable: boolean) {\n        console.log(\"启动后台监听1\", enable)\n        PlatformFactory.Ins.enableOnResumeOnPause({ enable: enable })\n    }\n    /**\n     * 获取网络状态\n     * @returns {boolean} false无网络\n     */\n    static isNetworkConnected() {\n        return PlatformFactory.Ins.isNetworkConnected();\n    }\n    /**\n     * 通知刷新客户端token\n     */\n    static retryToken() {\n        PlatformFactory.Ins.retryToken();\n    }\n    /**\n    * 微信授权\n    */\n    static authWechat() {\n        PlatformFactory.Ins.authWechat();\n    }\n    /**\n    * 支付宝授权\n    */\n    static requestAlipayAuth() {\n        PlatformFactory.Ins.requestAlipayAuth();\n    }\n\n    /**\n   * 反馈界面\n   */\n    static showCustomerService() {\n        PlatformFactory.Ins.showCustomerService();\n    }\n    static showPrivacyPolicy() {\n        PlatformFactory.Ins.showPrivacyPolicy();\n    }\n    static showUserProtocol() {\n        PlatformFactory.Ins.showUserProtocol();\n    }\n    static cancelAccount(){\n        PlatformFactory.Ins.cancelAccount();\n    }\n\n    /**\n     * 打开链接\n     */\n    static openWebUrl(obj) {\n        PlatformFactory.Ins.openWebUrl(obj);\n    }\n    /**\n     * 获取原生的尺寸\n     */\n    static getScreenWidth() {\n        return PlatformFactory.Ins.getScreenWidth()\n    }\n    static getScreenHeight() {\n        return PlatformFactory.Ins.getScreenHeight()\n    }\n    /**\n    * 获取非强制更新版本\n    */\n    static getNewVersionName() {\n        return PlatformFactory.Ins.getNewVersionName();\n    }\n\n    /**\n     * 添加游戏恢复监听\n     * @param callback 回调\n     */\n    static onListenGameResume(callback: Function) {\n        window[\"SystemInterface\"].onListenGameResume = callback;\n    }\n\n    /**\n     * 添加游戏停止监听\n     * @param callback 回调\n     */\n    static onListenGameStop(callback: Function) {\n        window[\"SystemInterface\"].OnGameStop = callback;\n    }\n\n    static openNetWorkCount = 0;\n    static post(config: ServerConfig) {        \n        let configData: ServerConfig = {\n            url: config.url,\n            data: config.data,\n            method: \"POST\",\n            header: config.header,\n            onSuccess: function (res) {\n                XMSDK.openNetWorkCount = 0;\n\t\t\t\tconsole.log(\"成功回调--------------------post\" );\n                config.onSuccess && config.onSuccess(res)\n            },\n            onFail: function (res) {\n                XMSDK.openNetWorkCount++\n\n                config.onFail && config.onFail(res)\n               \n            },\n            onComplete: function (res) {\n                config.onComplete && config.onComplete(res);                \n            },\n\n        }\n        Ajax.send(configData);\n    }\n\t\n\t\n\t  static getdataStr(config: ServerConfig) {        \n        let configData: ServerConfig = {\n            url: config.url,\n            data: config.data,\n            method: \"POST\",\n            header: config.header,\n            onSuccess: function (res) {\n                XMSDK.openNetWorkCount = 0;\n\n                config.onSuccess && config.onSuccess(res)\n            },\n            onFail: function (res) {\n                XMSDK.openNetWorkCount++\n\n                config.onFail && config.onFail(res)\n      \n            },\n            onComplete: function (res) {\n                config.onComplete && config.onComplete(res);                \n            },\n\n        }\n        Ajax.getdata(configData);\n    }\n\t\n\t\n    static get(config: ServerConfig) {\n        //UIFunc.openUI(ActivityPannelName.PannelAdLoading)\n        let configData: ServerConfig = {\n            url: config.url,\n            data: config.data,\n            method: \"GET\",\n            header: config.header,\n            onSuccess: function (res) {\n                XMSDK.openNetWorkCount = 0;\nconsole.log(\"成功回调--------------------get\" );\n                config.onSuccess && config.onSuccess(res)\n            },\n            onFail: function (res) {\n                XMSDK.openNetWorkCount++\n\n                config.onFail && config.onFail(res)\n            },\n            onComplete: function (res) {\n                config.onComplete && config.onComplete(res)                \n            },\n\n        }\n        Ajax.send(configData);\n    }\n}\n"]}