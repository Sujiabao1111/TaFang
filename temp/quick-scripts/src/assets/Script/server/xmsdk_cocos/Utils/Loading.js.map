{"version":3,"sources":["assets\\Script\\server\\xmsdk_cocos\\Utils\\Loading.ts"],"names":[],"mappings":";;;;;;;AAAA;IAMI,iBAAY,KAAa,EAAE,YAAqB;QALhD,eAAU,GAAY,IAAI,CAAC;QAG3B,YAAO,GAAW,KAAK,CAAC;QAGpB,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;QAClB,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;IACrC,CAAC;IACM,6BAAW,GAAlB,UAAmB,IAAa;QAC5B,qBAAqB;QACrB,2BAA2B;QAE3B,6DAA6D;QAC7D,gCAAgC;QAChC,qBAAqB;QACrB,4CAA4C;QAC5C,2BAA2B;QAC3B,YAAY;QACZ,oDAAoD;QACpD,iGAAiG;QACjG,oBAAoB;QACpB,uHAAuH;QACvH,YAAY;QACZ,mGAAmG;QAEnG,UAAU;QACV,OAAO;IACX,CAAC;IAEM,8BAAY,GAAnB;QACI,uBAAuB;QACvB,iCAAiC;QACjC,SAAS;QACT,iHAAiH;QACjH,uBAAuB;QACvB,0CAA0C;QAC1C,aAAa;QACb,sCAAsC;QACtC,2GAA2G;QAC3G,8HAA8H;QAC9H,sCAAsC;QACtC,gBAAgB;QAEhB,iBAAiB;QACjB,QAAQ;QACR,IAAI;IACR,CAAC;IACL,cAAC;AAAD,CAjDA,AAiDC,IAAA;AAjDY,0BAAO","file":"","sourceRoot":"/","sourcesContent":["export class Loading {\n    loadingIns: cc.Node = null;\n    text: string;\n    disableClick: boolean;\n    loading:boolean = false;\n\n    constructor(_text: string, disableClick: boolean) {\n        this.text = _text;\n        this.disableClick = disableClick;\n    }\n    public openLoading(text?: string): void{\n        // if(!this.loading){\n        //     this.loading = true;\n\n        //     cc.loader.loadRes('/Prefabs/Loading', (err, prefab)=>{\n        //         this.loading = false;\n        //         if (err) {\n        //             cc.error(err.message || err);\n        //             return null;\n        //         }\n        //         this.loadingIns = cc.instantiate(prefab);\n        //         this.loadingIns.getComponent('LoadinController').setListenerStatus(this.disableClick);\n        //         if(text){\n        //             this.loadingIns.getChildByName('content').getChildByName('label').getComponent(cc.Label).string = text; \n        //         }\n        //         cc.director.getScene().getComponentInChildren(cc.Canvas).node.addChild(this.loadingIns);\n                \n        //     });\n        // }   \n    }\n\n    public closeLoading(): void{\n        // if(this.loadingIns){\n        //     this.loadingIns.destroy();\n        // }else{\n        //     let loadingNode = cc.director.getScene().getComponentInChildren(cc.Canvas).node.getChildByName('Loading');\n        //     if(loadingNode){\n        //         loadingNode.removeFromParent();\n        //     }else{\n        //         let sid = setInterval(()=>{\n        //             if(cc.director.getScene().getComponentInChildren(cc.Canvas).node.getChildByName('Loading')){\n        //                 cc.director.getScene().getComponentInChildren(cc.Canvas).node.getChildByName('Loading').removeFromParent();\n        //                 clearInterval(sid);\n        //             }\n                    \n        //         },200)\n        //     }\n        // }\n    }\n}"]}